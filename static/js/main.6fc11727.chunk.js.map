{"version":3,"sources":["DAL/api.js","components/MyPagination.js","components/Recipes.js","imgs/bkgd2.jpg","components/Home.js","DAL/utilFun.js","components/Forms/usersForms/Login.js","imgs/logo6.png","components/Forms/usersForms/SignUp.js","components/User/ProfilePages/MyFavorites.js","components/User/ProfilePages/MyRecipes.js","components/User/ProfilePages/UserProfile.js","components/Forms/AddRecipe/newRecipe.js","imgs/whatapp2.jfif","components/RecipeInfo.js","components/User/UserSecondNavber.js","components/User/ProfilePages/ErrorMsg.js","components/Forms/AddRecipe/Phase2.js","components/Forms/AddRecipe/Phase3.js","imgs/youdidit.jpg","components/Forms/AddRecipe/Phase4.js","components/Forms/updateRecipe/UpdateRecipe.js","components/Forms/updateRecipe/Step2.js","components/Forms/updateRecipe/Step3.js","components/Forms/updateRecipe/Step4.js","imgs/logo3.png","components/NavbarHome.js","App.js","reportWebVitals.js","index.js"],"names":["port","MostRecipes","a","axios","response","data","forEach","recipe","pic","image","getMyRecipes","id","withCredentials","getRecipe","recipes","getRecipeNames","getingredientsNames","getCatsAndDiets","get","isRecipeNameAvailable","name","console","log","unitsAndIngs","getUpdateDetails","getMyFavorites","RemoveAndReturnFavoritesRecipes","userId","recipeId","delete","addToMyFavorites","put","map","recipeID","onlyId","getMyFavoritesId","RemoveFromMyFavorites","setUnSeenRecipe","checkLoginAccess","email","password","post","result","addNewUser","details","respone","selectedItem","fetch","method","headers","body","JSON","stringify","json","getDetaildsFromDb","userinfo","updateUserInfo","rest","setNewRecipe","Error","updateRecipe","defaults","baseURL","MyPagination","recipesPerPage","totalRecipes","paginate","active","pageNumbers","i","push","Pagination","Item","onClick","Math","ceil","Row","className","Recipes","isConnected","UserId","history","useHistory","useState","selectedIng","setSelectedIng","likes","setLikes","apiRecipes","setApiRecipes","diets","categories","ings","checkboxs","setCheckboxs","loading","setLoading","currentPage","setCurrentPage","setActive","useEffect","window","scrollTo","favorites","prev","alert","getIngs","checkboxsInfo","item","class","fetchRecipes","indexOfLastRecipes","indexOfFirstRecipes","currentRecipes","slice","num","closeHandler","ing","filter","type","newArr","temp","length","includes","updateValue","updateMyFavorites","newRecipesId","CustomMenu","forwardRef","ref","children","style","value","setValue","FormControl","autoFocus","placeholder","onChange","e","target","overflow","maxHeight","child","props","toLowerCase","startsWith","Container","fluid","height","Navbar","collapseOnSelect","expand","Toggle","aria-controls","Nav","Col","Collapse","NavDropdown","title","Dropdown","Menu","as","sorted","sort","b","CookingTime","views","ListGroup","horizontal","icon","faTimesCircle","cursor","Spinner","animation","variant","Card","sm","md","text","width","Header","span","sx","OverlayTrigger","overlay","Tooltip","faBookmark","faEye","offset","food","Img","src","weidth","Title","Text","minHeight","description","allCategories","Jumbotron","Home","connected","userName","setRecipes","quickest","recent","popular","getMostQuickest","recipeName","NaN","recipeNamelst","setDetails","findName","lst","updateDropDown","apiFun","newNamesLst","filerOne","filterd","Form","Group","Control","size","autocomplete","onblur","Button","marginTop","objectFit","border","Body","alt","faHistory","hasPageAaccess","localStorage","getItem","Login","showLogin","onClose","setConnected","setUser","error","setError","validated","setValidated","isRequired","pattern","msg","isInVaild","prevDetails","handleSubmit","event","key","checkErrors","Object","hasOwnProperty","call","validation","preventDefault","stopPropagation","info","chekingDetails","checkingMatch","res","setItem","isData","errorMsg","isMsgShowing","test","in","Alert","show","noValidate","onSubmit","Label","InputGroup","hasValidation","onBlur","isInvalid","Feedback","role","aria-hidden","SignUp","setShow","firstName","lastName","passwordVerification","allRelevantData","borderRadius","logo","MyFavorites","useParams","myRecipes","remove","newRecipes","Modal","classname","Footer","faTrashAlt","faThumbtack","MyRecipes","deleteRecipe","setDeleteRecipe","handleClose","handleDelete","faEdit","handleShow","onHide","closeButton","faSmileWink","UserProfile","userUpdateHandler","userData","changeValues","obj","getDetaildsFromloaclhost","parse","user","checkUpdateDb","setTimeout","required","NewRecipe","inputsPage1Local","el","selected","removeItem","addingDataFromDb","Servings","prepTimeMins","level","statusRecipeName","updateBox","listName","checked","currId","currName","allChecked","newBox","box","errmsg","formIsHalfFiled","values","to","lg","rows","Check","inline","label","RecipeInfo","onselect","addedDate","date","userID","ingredients","instructions","selectRecipe","setSelectRecipe","then","catch","err","chosenRecipe","exit","username","marginRight","rel","href","data-action","whatapp","faPrint","print","ingredient","column","step","faUtensils","UserSecondNavber","activeKey","Link","ErrorMsg","Phase2","ingsUnits","setIngsUnits","combineData","setCombineData","unit","quantity","unitlst","ingredientlst","dataFromDb","pev","inputsPage2ocal","undefined","index","find","ele","removeName","Phase3","file","setFile","errMsg","setErrMsg","instruction","finshRecipe","isOK","newImage","FormData","append","fileValidation","File","files","findInstruction","borderStyle","borderWidth","block","Phase4","bkgd","UpdateRecipe","recipeData","Step2","Step3","inputsPage3ocal","Step4","NavbarHome","logOut","displayLogin","sticky","Brand","logo3","display","ariaExpanded","faUserCircle","App","setShowLogin","checkUser","checkConnected","fetchingUser","clear","logoutDeleteCookie","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fc11727.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport fetch from 'node-fetch';\r\n\r\nconst port = 3100;\r\n// const port = 5000;\r\n\r\naxios.defaults.withCredentials = true; //I changed it to false!!! meaning that cookies not required!!\r\naxios.defaults.baseURL = `http://localhost:${port}`;\r\naxios.defaults.headers['Access-Control-Allow-Origin'] = `http://localhost:3100`;\r\n// const fetcher = require('./fetcher');\r\n\r\n\r\n\r\n// With flask python-----------------------------------------------------------\r\nexport async function MostRecipes() {\r\n    const response = await axios(`/information/MostRecipes`);\r\n    // const response = await axios(`/MostRecipes`, { withCredentials: false });\r\n    response.data[0].forEach(recipe => recipe.pic = `http://localhost:${port}/${recipe.image}`);\r\n    response.data[1].forEach(recipe => recipe.pic = `http://localhost:${port}/${recipe.image}`);\r\n    response.data[2].forEach(recipe => recipe.pic = `http://localhost:${port}/${recipe.image}`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getMyRecipes(id) {\r\n    //const response = axios.get(`/recipes/myRecipes/${id}`);\r\n    const response = await axios(`recipes/MyRecipes/${id}`, { withCredentials: false });\r\n    response.data.forEach(recipe => recipe.pic = `http://localhost:${port}/${recipe.image}`);\r\n    return response.data;\r\n}\r\n\r\n\r\n\r\n// With express node js -----------------------------------------------------------\r\nexport async function getRecipe() {\r\n    const response = await axios(`/recipes`);\r\n    const recipes = response.data;\r\n    recipes.forEach(recipe => recipe.pic = `http://localhost:${port}/${recipe.image}`);\r\n    return recipes;\r\n}\r\n\r\nexport async function getRecipeNames() {\r\n    const response = await axios(`/recipeNames`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getingredientsNames() {\r\n    const response = await axios(`/ingredientsName`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getCatsAndDiets() {\r\n    const response = await axios.get(`/information`);\r\n    return response.data;\r\n}\r\n\r\nexport async function isRecipeNameAvailable(name) {\r\n    const response = await axios.get(`/information/RecipeNameAvailable/${name}`, { withCredentials: false });\r\n    console.log(\"RecipeNameAvailable-\", response);\r\n    return response.data;\r\n}\r\n\r\nexport async function unitsAndIngs(name) {\r\n    const response = await axios.get(`/information/unitsAndIngs`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getUpdateDetails(id) {\r\n    const response = await axios.get(`http://localhost:${port}/recipeInfo/${id}`);\r\n    return response.data;\r\n}\r\n\r\nexport async function getMyFavorites(id) {\r\n    const response = await axios.get(`/recipes/MyFavorites/${id}`);\r\n    response.data.forEach(recipe => recipe.pic = `http://localhost:${port}/${recipe.image}`);\r\n    return response.data;\r\n}\r\n\r\nexport async function RemoveAndReturnFavoritesRecipes(userId, recipeId) {\r\n    const response = await axios.delete(`/recipes/MyFavorites/${userId}/${recipeId}`);\r\n    response.data.forEach(recipe => recipe.pic = `http://localhost:${port}/${recipe.image}`);\r\n    return response.data;\r\n}\r\n\r\nexport async function addToMyFavorites(userId, recipeId) {\r\n    const response = await axios.put(`/recipes/MyFavorites/${userId}/${recipeId}`);\r\n    const onlyId = await response.data.map(recipe => recipe.recipeID);\r\n    return onlyId;\r\n}\r\n\r\nexport async function getMyFavoritesId(userId) {\r\n    const response = await axios.get(`/recipes/MyFavorites/ids/${userId}`);\r\n    const onlyId = await response.data.map(recipe => recipe.recipeID);\r\n    return onlyId;\r\n}\r\n\r\nexport async function RemoveFromMyFavorites(userId, recipeId) {\r\n    const response = await axios.delete(`/recipes/MyFavorites/ids/${userId}/${recipeId}`);\r\n    const onlyId = await response.data.map(recipe => recipe.recipeID);\r\n    return onlyId;\r\n}\r\n\r\nexport async function setUnSeenRecipe(recipeId) {\r\n    const response = await axios.put(`recipeInfo/unSeenRecipe/${recipeId}`);\r\n    return response.data;\r\n}\r\n\r\n\r\nexport async function checkLoginAccess({ email, password }) {\r\n    try {\r\n        const result = await axios.post('/users/login', { email, password });\r\n        return result.data;\r\n    } catch (err) {\r\n        console.log('login error', err);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function addNewUser(details) {\r\n    try {\r\n        console.log(\"enter addNewUser fun'\");\r\n        const respone = await axios.post(`/addUser`, details)\r\n        return respone.data;\r\n    } catch (err) {\r\n        console.log(err);\r\n        // return err;\r\n    }\r\n}\r\n\r\nexport async function selectedItem(id) {\r\n    try {\r\n        const result = await fetch(`http://localhost:${port}/recipeInfo`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify({ \"id\": id })\r\n        })\r\n        const data = await result.json();\r\n        console.log(\"result\", data);\r\n        const recipe = data[0];\r\n        recipe.image = recipe.image ? `http://localhost:${port}/${recipe.image}` : \"\";\r\n        console.log(\"recipe\", recipe);\r\n        return recipe;\r\n    } catch (err) {\r\n        console.log(\"Error. Cant fetch\")\r\n    }\r\n}\r\n\r\nexport async function getDetaildsFromDb(id) {\r\n    try {\r\n        const response = await axios.post(\"/users/getUserInfo\", id, { withCredentials: true })\r\n        const userinfo = await response.data\r\n        return userinfo;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport async function updateUserInfo({ id, ...rest }) {\r\n    try {\r\n        const response = await axios.put(`http://localhost:${port}/users/${id}`, rest, { withCredentials: true })\r\n        const details = await response.data;\r\n        return details;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport async function setNewRecipe(data, image) {\r\n    try {\r\n        const response = await axios.post(\"/addNewRecipe\", data);\r\n        if (response.data) {\r\n            await axios.post(`/recipes/upload/${response.data}`, image);\r\n            console.log(response.data);\r\n            return response.data;\r\n        } else {\r\n            throw new Error(\"can't add new recipe or image\")\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nexport async function logoutDeleteCookie() {\r\n    const response = await axios('/users/logout')\r\n    return response\r\n}\r\n\r\n\r\nexport async function updateRecipe(id, data, image) {\r\n    try {\r\n        const response = await axios.put(`http://localhost:${port}/recipeInfo/${id}`, data);\r\n\r\n        if (!response.data) {\r\n            throw new Error(\"can't add new recipe or image\")\r\n        }\r\n\r\n        if (image) {\r\n            await axios.post(`/recipes/upload/${id}`, image);\r\n        }\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Pagination, Row } from \"react-bootstrap\";\r\n\r\nconst MyPagination = ({ recipesPerPage, totalRecipes, paginate, active }) => {\r\n    const pageNumbers = [];\r\n\r\n    // useEffect(() => {\r\n    // }, [active])\r\n\r\n    const updatePage = (numPage) => {\r\n        paginate(numPage)\r\n    }\r\n\r\n    for (let i = 1; i <= Math.ceil(totalRecipes / recipesPerPage); i++) {\r\n        pageNumbers.push(\r\n            <Pagination.Item\r\n                key={i}\r\n                onClick={() => updatePage(i)}\r\n                active={i === active}>\r\n                {i}\r\n            </Pagination.Item>\r\n        )\r\n    }\r\n\r\n    return <Row className=\"justify-content-center pt-3 mb-4 pb-3\">\r\n        <Pagination>{pageNumbers}</Pagination>\r\n    </Row>\r\n}\r\n\r\nexport default MyPagination;","import { Card, Container, Row, Col, Tooltip, ListGroup, Navbar, Nav, NavDropdown, Jumbotron, Button, Dropdown, FormControl, Spinner, OverlayTrigger } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faEdit, faHeart, faEye, faTimesCircle, faBookmark, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState, useEffect, forwardRef } from \"react\";\r\nimport { getRecipe, addToMyFavorites, getMyFavoritesId, RemoveFromMyFavorites, getCatsAndDiets, getingredientsNames } from \"../DAL/api\";\r\nimport MyPagination from \"./MyPagination\";\r\n\r\n\r\nexport default function Recipes({ isConnected, UserId }) {\r\n    const history = useHistory()\r\n    const [selectedIng, setSelectedIng] = useState([]);\r\n    const [likes, setLikes] = useState([]);\r\n    const [apiRecipes, setApiRecipes] = useState([]);\r\n    const [checkboxs, setCheckboxs] = useState({ diets: [], categories: [], ings: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [recipesPerPage, setRecipesPerPage] = useState(6); //for pagination uses\r\n    const [active, setActive] = useState(1)\r\n\r\n\r\n    // let originalRecipe;\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            window.scrollTo(0, 0);\r\n            if (isConnected) {\r\n                const favorites = await getMyFavoritesId(UserId);\r\n                console.log(\"favorites\", favorites);\r\n                setLikes(prev => favorites)\r\n            }\r\n        })()\r\n    }, [isConnected, UserId])\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchRecipes = async () => {\r\n            window.scrollTo(0, 0);\r\n            try {\r\n                // setLoading(true)\r\n                const recipes = await getRecipe()\r\n                console.log(\"recipes\", recipes);\r\n                // originalRecipe = recipes;\r\n                setApiRecipes(prev => recipes)\r\n                setLoading(false)\r\n            } catch (err) {\r\n                alert(\"Error, please refresh the site\", err)\r\n            }\r\n\r\n            try {\r\n                const data = await getCatsAndDiets();\r\n                const getIngs = await getingredientsNames();\r\n                console.log(\"catsDiets:\", data);\r\n                console.log(\"getIngs:\", getIngs);\r\n                const checkboxsInfo = { diets: data[0], categories: data[1], ings: getIngs }\r\n                checkboxsInfo.diets.forEach(item => item.class = \"alldiets\")\r\n                checkboxsInfo.categories.forEach(item => item.class = \"allCategories\")\r\n                checkboxsInfo.ings.forEach(item => item.class = \"allIngredients\")\r\n                // console.log(\"checkboxsInfo\", checkboxsInfo);\r\n                setCheckboxs(prev => checkboxsInfo)\r\n            } catch (err) {\r\n                alert(\"cant import ings, cats and diets\")\r\n            }\r\n        }\r\n        fetchRecipes()\r\n        return () => setSelectedIng([]);\r\n    }, [likes])\r\n\r\n\r\n    //Get current recipes\r\n    const indexOfLastRecipes = currentPage * recipesPerPage;\r\n    const indexOfFirstRecipes = indexOfLastRecipes - recipesPerPage;\r\n    const currentRecipes = apiRecipes.slice(indexOfFirstRecipes, indexOfLastRecipes)\r\n\r\n    const paginate = (num) => {\r\n        window.scrollTo(0, 0);\r\n        setCurrentPage(num)\r\n        setActive(num)\r\n    }\r\n\r\n\r\n    //filter recipes \r\n    const closeHandler = async (ing) => {\r\n        const newArr = await selectedIng.filter(type => type.name !== ing.name)\r\n        setSelectedIng(prev => newArr);\r\n        console.log(\"selectedIng\", newArr);\r\n\r\n        setLoading(true)\r\n        let temp = await getRecipe()\r\n        console.log(\"temp1\", temp);\r\n        setLoading(false)\r\n\r\n        if (newArr.length < 1) {\r\n            // console.log(\"selectedIng is empty\", newArr);\r\n        } else {\r\n            // console.log(\"selectedIng not empty\", newArr);\r\n            for (let i = 0; i < newArr.length; i++) {\r\n                const type = newArr[i];\r\n                console.log(type);\r\n                temp = temp.filter(recipe => recipe[type.class].includes(type.name))\r\n            }\r\n        }\r\n\r\n        console.log(\"temp2\", temp);\r\n        setApiRecipes(prev => temp)\r\n        // setLoading(false)\r\n\r\n    };\r\n\r\n    const sortViews = () => {\r\n        const sorted = apiRecipes.sort((b, a) => a.views - b.views)\r\n        setApiRecipes(prev => [...sorted])\r\n        paginate(1)\r\n    }\r\n\r\n    const sortQuick = () => {\r\n        const sorted = apiRecipes.sort((a, b) => a.CookingTime - b.CookingTime)\r\n        const temp = apiRecipes.map(a => a.CookingTime)\r\n        console.log(temp);\r\n        setApiRecipes(prev => [...sorted])\r\n        paginate(1)\r\n    }\r\n\r\n\r\n    const updateValue = (type) => {\r\n        if (selectedIng.includes(type)) {\r\n            return;\r\n        }\r\n        setLoading(true)\r\n        setSelectedIng(prev => [...prev, type]);\r\n        const temp = apiRecipes.filter(recipe => {\r\n            // console.log(type.class, \"type.class\");\r\n            return recipe[type.class].includes(type.name)\r\n        })\r\n        setApiRecipes(prev => [...temp])\r\n        setLoading(false)\r\n        console.log(\"temp-add\", temp);\r\n        paginate(1)\r\n\r\n    }\r\n\r\n    const chooseRepice = (food) => {\r\n        history.push(`/recipe_details/${food.id}`)\r\n    }\r\n\r\n\r\n    const updateMyFavorites = async (recipeId) => {\r\n        try {\r\n            // setLoading(true)\r\n            if (likes.includes(recipeId)) {\r\n                const newRecipesId = await RemoveFromMyFavorites(UserId, recipeId);\r\n                // setLoading(false)\r\n                console.log(\"new ids-remove:\", newRecipesId);\r\n                setLikes(prev => newRecipesId)\r\n            } else {\r\n                const newRecipesId = await addToMyFavorites(UserId, recipeId);\r\n                // setLoading(false)\r\n                console.log(\"new ids-add:\", newRecipesId);\r\n                setLikes(prev => newRecipesId)\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    const CustomMenu = forwardRef(\r\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n            const [value, setValue] = useState('');\r\n            return (<div>\r\n                <FormControl\r\n                    autoFocus\r\n                    className=\"mx-3 my-2 w-auto\"\r\n                    placeholder=\"Type to filter...\"\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    value={value}\r\n                />\r\n                <ul className=\"list-unstyled\" style={{ overflow: \"auto\", maxHeight: \"310px\" }}>\r\n                    {children.filter(\r\n                        (child) =>\r\n                            !value || child.props.children.toLowerCase().startsWith(value),\r\n                    )}\r\n                </ul>\r\n            </div >\r\n            );\r\n        },\r\n    );\r\n\r\n\r\n    return <Container fluid className=\"py-2\" style={{ height: \"100%\" }}>\r\n        <div id=\"recipes\"></div>\r\n        <h1 className=\"display-1 h1style text-center\">The Recipes</h1>\r\n        <Navbar collapseOnSelect expand=\"lg\" id=\"styleNav\" className=\"text-center font-weight-bold\">\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Nav className=\"m-auto\">\r\n                <Row className=\"justify-content-center\">\r\n                    <Col>\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <NavDropdown title=\"Categories\" id=\"collasible-nav-dropdown\">\r\n                                {checkboxs.categories.map((type, i) => <NavDropdown.Item\r\n                                    value={type}\r\n                                    onClick={() => updateValue(type, \"categories\")}\r\n                                    key={i}\r\n                                >{type.name}</NavDropdown.Item>)}\r\n                            </NavDropdown>\r\n                        </Navbar.Collapse>\r\n                    </Col>\r\n\r\n                    {/* <Col>\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <NavDropdown title=\"Ingredients\" id=\"collasible-nav-dropdown\">\r\n                                {checkboxs.ings.map((type, i) => <NavDropdown.Item\r\n                                    value={type}\r\n                                    onClick={() => updateValue(type, \"allIngredients\")}\r\n                                    key={i}\r\n                                >{type.name}</NavDropdown.Item>)}\r\n                            </NavDropdown>\r\n                        </Navbar.Collapse>\r\n                    </Col> */}\r\n\r\n\r\n                    <Col>\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <NavDropdown title=\"Ingredients\" id=\"collasible-nav-dropdown\">\r\n                                <Dropdown.Menu as={CustomMenu}>\r\n                                    {checkboxs.ings.map((type, i) => <NavDropdown.Item\r\n                                        value={type}\r\n                                        onClick={() => updateValue(type, \"allIngredients\")}\r\n                                        key={i}\r\n                                    >{type.name}</NavDropdown.Item>)}\r\n                                </Dropdown.Menu>\r\n                            </NavDropdown>\r\n                        </Navbar.Collapse>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <NavDropdown title=\"Diets\" id=\"collasible-nav-dropdown\">\r\n                                {checkboxs.diets.map((type, i) => <NavDropdown.Item\r\n                                    value={type}\r\n                                    onClick={() => updateValue(type, \"diets\")}\r\n                                    key={i}\r\n                                >{type.name}</NavDropdown.Item>)}\r\n                            </NavDropdown>\r\n                        </Navbar.Collapse>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <NavDropdown title=\"Sort By\" id=\"collasible-nav-dropdown\">\r\n                                <NavDropdown.Item\r\n                                    onClick={sortQuick}>\r\n                                    the Quickest\r\n                                </NavDropdown.Item>\r\n                                <NavDropdown.Item\r\n                                    onClick={sortViews}>\r\n                                    Views\r\n                                </NavDropdown.Item>\r\n\r\n                            </NavDropdown>\r\n                        </Navbar.Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Nav>\r\n        </Navbar>\r\n\r\n\r\n        <ListGroup horizontal className=\"mt-2\">\r\n            {!!selectedIng.length && selectedIng.map((ing, i) => (<ListGroup.Item key={i}>\r\n                <FontAwesomeIcon icon={faTimesCircle}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => closeHandler(ing)}\r\n                    className={\"mr-2 ml-2\"} />\r\n                {ing.name}\r\n            </ListGroup.Item>))}\r\n        </ListGroup>\r\n\r\n        {loading && <Row className=\"justify-content-center mx-auto\" id=\"spinnerStlye\">\r\n            <Col>\r\n                <h1>please wait a few seconds...</h1>\r\n                <Spinner animation=\"border\" variant=\"warning\" />\r\n            </Col>\r\n        </Row>}\r\n\r\n        <Row className=\"justify-content-center mb-3\">\r\n            {/* {!!apiRecipes.length && apiRecipes.map((item, i) => <Card */}\r\n            {!!currentRecipes.length && !loading && currentRecipes.map((item, i) => <Card\r\n                id=\"myFav\"\r\n                key={i}\r\n                sm={6}\r\n                md={4}\r\n                text={'dark'}\r\n                style={{ width: '22rem', }}\r\n                className=\"m-3 styleCard\"\r\n            >\r\n                <Card.Header >\r\n                    <Row>\r\n                        <Col className=\"px-1\" md={{ span: 4 }} sx={{ span: 4 }}>\r\n                            <div>{isConnected && <OverlayTrigger\r\n                                overlay={\r\n                                    <Tooltip id=\"tooltip-left\">\r\n                                        click to add to your favorites.\r\n                                    </Tooltip>\r\n                                }\r\n                            >\r\n                                {/* <Button variant=\"secondary\">Tooltip on {placement}</Button> */}\r\n                                <FontAwesomeIcon icon={faBookmark}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={() => updateMyFavorites(item.id)}\r\n                                    className={likes.includes(item.id) ? \"text-warning mr-2 ml-2\" : \"text-white mr-2 ml-2\"} />\r\n                            </OverlayTrigger>\r\n\r\n                            }\r\n                                {/* <FontAwesomeIcon icon={faEdit}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={e => chooseRepice(item)}\r\n                                    className=\"mr-2 ml-2\" /> */}\r\n                                <FontAwesomeIcon icon={faEye}\r\n                                    className=\"ml-2 mr-0\" />\r\n                                <span className=\"pl-2\">\r\n                                    {item.views}\r\n                                </span>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"px-0\" sx={{ span: 4, offset: 4 }} md={{ span: 4, offset: 4 }} >\r\n                            {/* <FontAwesomeIcon icon={faHeart}\r\n                                className=\"ml-2 mr-0\" />\r\n                            <span className=\"pl-2\">\r\n                                {item.likes}\r\n                            </span> */}\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <div\r\n                    onClick={e => chooseRepice(item)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                >\r\n                    <Card.Img className=\"Foodsimg\" variant=\"top\" src={item.pic} height=\"180px\" weidth=\"286px\" />\r\n                    <Card.Title className=\"text-center py-1\">{item.name}</Card.Title>\r\n                    <Card.Text className=\"text-center m-1\" style={{ minHeight: \"8vh\" }}>\r\n                        {item.description}\r\n                    </Card.Text>\r\n\r\n                    <hr></hr>\r\n                    <p className=\"text-center\">\r\n                        {item.allCategories && item.allCategories.map((type, i) => {\r\n                            if (i === 0) {\r\n                                return <span className=\"text-capitalize\" key={i}> {type} </span>\r\n                            }\r\n                            return <span className=\"text-capitalize\" key={i}>| {type} </span>\r\n                        })}\r\n                    </p>\r\n                </div>\r\n            </Card>)}\r\n\r\n            {!apiRecipes.length && !loading && <Jumbotron fluid className=\"mt-3\">\r\n                <Container>\r\n                    <p>\r\n                        No matching recipes were found.\r\n                    </p>\r\n                </Container>\r\n\r\n            </Jumbotron>}\r\n        </Row>\r\n        <MyPagination recipesPerPage={recipesPerPage} totalRecipes={apiRecipes.length} paginate={paginate} active={active} />\r\n    </Container >\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bkgd2.8f858a9c.jpg\";","import { useState, useEffect } from \"react\";\r\nimport { Button, Container, Form, Row, Col, Collapse, ListGroup, InputGroup, Card, Carousel } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo2 from '../imgs/bkgd2.jpg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getRecipeNames, getingredientsNames, MostRecipes } from '../DAL/api'\r\n\r\nfunction Home({ connected, userName }) {\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const getMostQuickest = async () => {\r\n            const response = await MostRecipes()\r\n            console.log(response);\r\n            setRecipes(prev => ({\r\n                quickest: response[0],\r\n                recent: response[1],\r\n                popular: response[2],\r\n            }))\r\n        }\r\n\r\n        getMostQuickest()\r\n    }, [])\r\n\r\n    const [recipes, setRecipes] = useState({\r\n        quickest: [],\r\n        recent: [],\r\n        popular: [],\r\n    });\r\n\r\n    const [details, setDetails] = useState({\r\n        recipeName: { value: \"\", id: NaN },\r\n        recipeNamelst: [],\r\n    })\r\n\r\n    const chooseRepice = (food) => {\r\n        history.push(`/recipe_details/${food.id}`)\r\n    }\r\n\r\n    const findName = (lst, value) => lst.filter((item, i) => {\r\n        return item.name.toLowerCase().includes(value.toLowerCase())\r\n    });\r\n\r\n\r\n    // const updateValue = (name, value) => {\r\n    //     setDetails(prev => ({ ...prev, [name]: { ...prev[name], value: \"\" }, [name + \"lst\"]: [] }))\r\n    // }\r\n\r\n    const updateDropDown = async ({ name, value }) => {\r\n        try {\r\n            const apiFun = name === \"recipeName\" ? getRecipeNames : getingredientsNames;\r\n            const newNamesLst = await apiFun()\r\n            const filerOne = await findName(newNamesLst, value)\r\n            const filterd = value ? filerOne : [];\r\n            setDetails(prev => ({ ...prev, [name]: { ...prev[name], value }, [name + \"lst\"]: filterd }))\r\n        } catch (err) {\r\n            alert(err)\r\n        }\r\n    }\r\n\r\n    return <Container fluid  >\r\n        <div id=\"bkgdStyle\">\r\n            <div className=\"row  pt-4\" id=\"bkgdStyle2\">\r\n                <Col md={{ span: 6, offset: 3 }} className=\"text-center\">\r\n                    <Form className=\"pt-0\" id=\"formMedia text-center\">\r\n                        {!connected && <><h1 className=\"display-1 h1style mb-0\"> Recipes:</h1>\r\n\r\n                            {/* <h4 className=\"display-6\">Here all Recipes are - easy, quick and delicious</h4> */}\r\n                            <p > <strong>Easy and quick meal ideas and healthy recipes</strong></p>\r\n                        </>}\r\n                        {connected && <div>\r\n                            <h1 className=\"display-4 pt-4 h1styleUser\">\r\n                                <span className=\"optional mx-1\"> Hi {userName}!</span>\r\n                                <br></br>\r\n                                Search for a Recipe:</h1>\r\n                        </div>}\r\n\r\n                        <Form.Group\r\n                            id=\"namelist\">\r\n\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                type=\"text\"\r\n                                autocomplete=\"off\"\r\n                                name=\"recipeName\"\r\n                                onChange={e => updateDropDown(e.target)}\r\n                                onblur={e => updateDropDown(e.target)}\r\n                                value={details.recipeName.value}\r\n                                placeholder=\"Search for a recipe...\" />\r\n                            <ListGroup >\r\n                                {details.recipeNamelst.slice(0, 3).map((food, i) => <ListGroup.Item\r\n                                    onClick={() => history.push(`/recipe_details/${food.id}`)}\r\n                                    key={i}\r\n                                >{food.name}</ListGroup.Item>)}\r\n                            </ListGroup>\r\n                        </Form.Group>\r\n\r\n                        <Button\r\n                            onClick={() => { history.push(\"/AllRecipes\") }}\r\n                            variant=\"outline-light\"\r\n                            id=\"btnAdvenced\"\r\n                        >\r\n                            Advanced Search\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n\r\n                {/* </Row> */}\r\n                {/* <Row className=\"p-2 py-3\" >\r\n                <Col className=\"p-2 pt-3 text-center\">\r\n                <img src={logo2} style={{ height: '250px', width: '300px', borderRadius: \"50%\" }} alt=\"logo\"></img>\r\n                </Col>\r\n            </Row> */}\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <hr className=\"hrMain\"></hr>\r\n        <Row className=\"justify-content-center mb-3\">\r\n            <Col md={{ span: 6, offset: 1 }}>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col className=\"mostPopular p-2\">\r\n                        <div\r\n                            style={{ cursor: \"pointer\", marginTop: \"17px\" }}\r\n                            onClick={() => history.push(`/recipe_details/${recipes.popular[0].id}`)}>\r\n                            <Card text={'dark'}>\r\n                                <Card.Img className=\"Foodsimg\" variant=\"top\" src={recipes.popular.length ? recipes.popular[0].pic : \"\"} style={{ minHeight: '195px', maxHeight: '235px', width: '', objectFit: \"cover\" }} />\r\n                                <span >Most Popular Recipe</span>\r\n                            </Card>\r\n                        </div>\r\n                        {/* <img alt=\"food pic\" src={recipes.popular.length ? recipes.popular[0].pic : \"\"} style={{ minHeight: '195px', maxHeight: '145px', width: 'inherit', objectFit: \"cover\" }}></img> */}\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"justify-content-center\">\r\n                    <Col className=\"mostPopular p-2\">\r\n                        <div\r\n                            style={{ cursor: \"pointer\", marginTop: \"17px\" }}\r\n                            onClick={() => history.push(`/recipe_details/${recipes.recent[0].id}`)}>\r\n                            <Card text={'dark'}>\r\n                                <Card.Img className=\"Foodsimg\" variant=\"top\" src={recipes.recent.length ? recipes.recent[0].pic : \"\"} style={{ minHeight: '195px', maxHeight: '235px', width: '', objectFit: \"cover\" }} />\r\n                                <span id=\"tagRecent\">Most Recent Recipe</span>\r\n                            </Card>\r\n                        </div>\r\n                        {/* <img alt=\"food pic\" src={recipes.recent.length ? recipes.recent[0].pic : \"\"} style={{ minHeight: '195px', maxHeight: '145px', width: 'inherit', objectFit: \"cover\" }}></img> */}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col md={4} className=\"p-auto m-auto\">\r\n                <Row className=\"justify-content-center\">\r\n                    <Card border=\"primary\" style={{ width: '20rem', marginTop: \"20px\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title id=\"h1Home\">The Quickest</Card.Title>\r\n                            <Card.Text>\r\n                                {!!recipes.quickest.length && recipes.quickest.map((item, i) => <Row className=\"py-2\"\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={e => chooseRepice(item)}>\r\n                                    <Col md={5} >\r\n                                        <img id=\"mediaFixImg\" alt=\"food pic\" src={item.pic} style={{ minHeight: '60px', maxHeight: '60px', width: 'inherit', objectFit: \"cover\" }}></img>\r\n                                    </Col>\r\n                                    <Col sx={7} id=\"fontStyle\">\r\n                                        <p>{item.name}\r\n                                            <br></br>\r\n                                            <FontAwesomeIcon icon={faHistory} className=\"m-0 p-0 mr-2\" />\r\n                                            {item.CookingTime}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>)}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n\r\n    </Container >\r\n}\r\n\r\nexport default Home;","export function hasPageAaccess(connected, history) {\r\n    // console.log(\"connected status\", connected);\r\n    if (!localStorage.getItem(\"user\")) {\r\n        // if (!connected) {\r\n        // console.log(\"not connected - return home page\", connected);\r\n        history.push(\"/\")\r\n    }\r\n    // console.log(\"connected, staying in this page\", connected);\r\n}\r\n\r\n\r\nexport default function checkpPreviousPages(histoy, ...localObjects) {\r\n    for (const localObj of localObjects) {\r\n        if (localStorage.getItem(localObj)) {\r\n            const pageData = JSON.parse(localStorage.getItem(localObj));\r\n            return pageData;\r\n            // if (page.isDisabled || page.isDisabled === undefined) {\r\n            //     histoy.push(`/${localObj.slice(0, 5)}_${localObj.slice(5)}`);\r\n            //     break;\r\n            // }\r\n        } else {\r\n            histoy.push(`/${localObj.slice(0, 5)}_${localObj.slice(5)}`);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { Button, Card, Form, Collapse, InputGroup, Alert, Spinner } from \"react-bootstrap\";\r\nimport { checkLoginAccess } from \"../../../DAL/api\";\r\n\r\nfunction Login({ showLogin, onClose, setConnected, setUser }) {\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const [validated, setValidated] = useState(false);\r\n    const [details, setDetails] = useState({\r\n        email: { isRequired: true, pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, msg: [], value: \"\", isInVaild: false },\r\n        password: { isRequired: true, pattern: /[\\s\\S]{2,}/, msg: [], value: \"\", isInVaild: false },\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        if (!showLogin) {\r\n            setError(false);\r\n            setDetails(prevDetails => ({\r\n                ...prevDetails,\r\n                email: { ...prevDetails[\"email\"], value: \"\", isInVaild: false },\r\n                password: { ...prevDetails[\"password\"], value: \"\", isInVaild: false }\r\n            }))\r\n\r\n        }\r\n    }, [showLogin])\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        const checkErrors = [];\r\n        for (const key in details) {\r\n            if (Object.hasOwnProperty.call(details, key)) {\r\n                checkErrors.push(validation({ name: key, value: details[key].value }))\r\n\r\n            }\r\n        }\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(false)\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n        setLoading(true)\r\n        setValidated(true);\r\n        event.preventDefault();\r\n        const info = { email: details.email.value, password: details.password.value }\r\n        const chekingDetails = await checkLoginAccess(info)\r\n        const res = await checkingMatch(chekingDetails);\r\n        setLoading(false)\r\n        if (res) {\r\n            setConnected(true);\r\n            setUser(prev => chekingDetails);\r\n            localStorage.setItem(\"user\", JSON.stringify(chekingDetails))\r\n            setError(false)\r\n            onClose()\r\n\r\n        } else {\r\n            setLoading(false)\r\n            setValidated(false);\r\n            console.log(\"error changed to true-\", error);\r\n            setError(true)\r\n        }\r\n    };\r\n\r\n    const checkingMatch = isData => {\r\n        // console.log(\"isData\", isData);\r\n        if (!isData) {\r\n            console.log('no match');\r\n            return false;\r\n        }\r\n        setConnected(true);\r\n        onClose()\r\n        return true;\r\n    }\r\n\r\n\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (value === \"\") {\r\n            isMsgShowing = true\r\n            errorMsg.push(`This Field is Required`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`Not Valid.`)\r\n            isMsgShowing = true\r\n        }\r\n        // console.log(name, \"value\", value, \"isMsgShowing\", isMsgShowing, \"errorMsg\", errorMsg);\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n    return <Collapse in={showLogin}>\r\n        <Card\r\n            id=\"loginCard\">\r\n            <Alert show={error} variant=\"secondary\" onClose={() => setError(false)}>\r\n                Worng email or password ! try again.\r\n            </Alert>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <h1 className=\"display-4 text-center\">Login</h1>\r\n                <Form.Group>\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onBlur={e => validation(e.target)}\r\n                            onChange={e => validation(e.target)}\r\n                            value={details.email.value}\r\n                            placeholder=\"Enter email...\"\r\n                            isInvalid={details.email.isInVaild}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                            {details.email.msg}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                    <Form.Label>Password</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onBlur={e => validation(e.target)}\r\n                            onChange={e => validation(e.target)}\r\n                            value={details.password.value}\r\n                            placeholder=\"Enter password...\"\r\n                            isInvalid={details.password.isInVaild}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                            {details.password.msg}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"outline-dark\" onClick={onClose} className=\"mx-2\">\r\n                    close </Button>\r\n                <Button variant=\"outline-dark\" type=\"submit\">\r\n                    {loading && <Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                    />}\r\n                    {loading ? <span>Loading...</span> : <span>Submit</span>}\r\n                </Button>\r\n            </Form>\r\n        </Card>\r\n    </Collapse >\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/logo6.f109d980.png\";","import { Button, Card, Form, InputGroup, Alert, Container, Row, Spinner } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport logo from '../../../imgs/logo6.png'\r\nimport { addNewUser } from \"../../../DAL/api\";\r\n\r\n\r\nfunction SignUp({ hasPageAaccess, connected }) {\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        // hasPageAaccess(connected, history)\r\n        const Access = () => {\r\n            if (localStorage.getItem(\"user\")) {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n        Access()\r\n    }, [connected])\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const [details, setDetails] = useState({\r\n        email: { isRequired: true, pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, msg: [], value: \"\", isInVaild: false },\r\n        firstName: { isRequired: true, pattern: /\\w{2,}/, msg: [], value: \"\", isInVaild: false },\r\n        lastName: { isRequired: true, pattern: /\\w{2,}/, msg: [], value: \"\", isInVaild: false },\r\n        password: { isRequired: true, pattern: /[\\s\\S]{2,}/, msg: [], value: \"\", isInVaild: false },\r\n        passwordVerification: { isRequired: true, pattern: /[\\s\\S]{2,}/, msg: [], value: \"\", isInVaild: false },\r\n    })\r\n\r\n    const handleSubmit = async (event) => {\r\n        console.log(\"enetr sumbit\");\r\n        const checkErrors = [];\r\n        for (const key in details) {\r\n            if (Object.hasOwnProperty.call(details, key)) {\r\n                checkErrors.push(validation({ name: key, value: details[key].value }))\r\n\r\n            }\r\n        }\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(false)\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        console.log(\"input whitout errors\");\r\n        setValidated(true);\r\n        event.preventDefault();\r\n\r\n        const allRelevantData = {\r\n            email: details.email.value,\r\n            firstName: details.firstName.value,\r\n            lastName: details.lastName.value,\r\n            password: details.password.value\r\n        }\r\n        setLoading(true)\r\n        const result = await addNewUser(allRelevantData);\r\n        console.log(\"result\", result);\r\n        setLoading(false)\r\n        if (!result) {\r\n            window.scrollTo(0, 0);\r\n            setValidated(false);\r\n            setShow(true)\r\n        } else {\r\n            alert(`You have successfully registered. You can login to the site!!!😍🥰`)\r\n            history.push('/')\r\n        }\r\n    };\r\n\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (value === \"\") {\r\n            isMsgShowing = true\r\n            errorMsg.push(`This Field is Required`)\r\n        } else if (name === \"passwordVerification\" && value !== details.password.value) {\r\n            isMsgShowing = true\r\n            errorMsg.push(`The passwords do not match`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`Not Valid.`)\r\n            isMsgShowing = true\r\n        }\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n\r\n    return <Container id=\"bkgdImge\">\r\n        <Row className=\"justify-content-center\">\r\n            <Card className=\"m-5 w-50 p-0\" style={{ borderRadius: \"10%\" }}>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit} id=\"bkgdStyleForm\">\r\n                    <Alert show={show} variant=\"danger\" onClose={() => setShow(false)}>\r\n                        <strong> User email already exist. Please try with another email.</strong>\r\n                    </Alert>\r\n                    <div className=\"text-center\">\r\n                        <img src={logo} alt=\"logo\" style={{ width: \"9em\", height: \"4em\", borderRadius: \"50%\" }} />\r\n                    </div>\r\n                    <h1 className=\"display-4 text-center\">Sign up</h1>\r\n                    <div id=\"textStyle\">\r\n\r\n                        <Form.Group >\r\n                            <Form.Label>First name:</Form.Label>\r\n                            <InputGroup hasValidation>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    onBlur={e => validation(e.target)}\r\n                                    onChange={(e) => validation(e.target)}\r\n                                    value={details.firstName.value}\r\n                                    placeholder=\"Enter first name...\"\r\n                                    isInvalid={details.firstName.isInVaild} />\r\n                                <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                    {details.firstName.msg}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group >\r\n                            <Form.Label>Last name:</Form.Label>\r\n                            <InputGroup hasValidation>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    onBlur={e => validation(e.target)}\r\n                                    onChange={(e) => validation(e.target)}\r\n                                    value={details.lastName.value}\r\n                                    placeholder=\"Enter last name...\"\r\n                                    isInvalid={details.lastName.isInVaild} />\r\n                                <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                    {details.lastName.msg}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Email address:</Form.Label>\r\n                            <InputGroup hasValidation>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    onBlur={e => validation(e.target)}\r\n                                    onChange={(e) => validation(e.target)}\r\n                                    value={details.email.value}\r\n                                    placeholder=\"Enter email...\"\r\n                                    isInvalid={details.email.isInVaild} />\r\n                                <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                    {details.email.msg}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group >\r\n                            <Form.Label>Password:</Form.Label>\r\n                            <InputGroup hasValidation>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onBlur={e => validation(e.target)}\r\n                                    onChange={(e) => validation(e.target)}\r\n                                    value={details.password.value}\r\n                                    placeholder=\"Enter password...\"\r\n                                    isInvalid={details.password.isInVaild} />\r\n                                <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                    {details.password.msg}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group >\r\n                            <Form.Label>Confirm Password:</Form.Label>\r\n                            <InputGroup hasValidation>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    name=\"passwordVerification\"\r\n                                    onBlur={e => validation(e.target)}\r\n                                    onChange={(e) => validation(e.target)}\r\n                                    value={details.passwordVerification.value}\r\n                                    placeholder=\"Enter password...\"\r\n                                    isInvalid={details.passwordVerification.isInVaild} />\r\n                                <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                    {details.passwordVerification.msg}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                    </div>\r\n                    <div className=\"text-center my-3 py-3\">\r\n                        <Button variant=\"outline-dark\" type=\"submit\" style={{ width: \"40%\" }}>\r\n                            {loading && <Spinner\r\n                                as=\"span\"\r\n                                animation=\"border\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />}\r\n                            {loading ? <span>Loading...</span> : <span>Submit</span>}\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </Card>\r\n        </Row>\r\n    </Container>\r\n}\r\n\r\nexport default SignUp;","import { Card, Container, Row, Col, Modal, Spinner } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbtack, faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getMyFavorites, RemoveAndReturnFavoritesRecipes } from \"../../../DAL/api\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// faHeart\r\n\r\nconst MyFavorites = ({ connected, hasPageAaccess }) => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [recipes, setRecipes] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        hasPageAaccess(connected, history);\r\n        window.scrollTo(0, 0)\r\n\r\n        // eslint-disable-next-line\r\n    }, [connected]);\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            window.scrollTo(0, 0);\r\n            const myRecipes = await getMyFavorites(id)\r\n            setLoading(false)\r\n            console.log(myRecipes);\r\n            if (myRecipes.error) {\r\n                alert(\"A connection problem ... Please refresh the site.\")\r\n            } else {\r\n                setRecipes(prev => myRecipes)\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n\r\n    const remove = async (recipeId) => {\r\n        setLoading(true)\r\n        const newRecipes = await RemoveAndReturnFavoritesRecipes(id, recipeId);\r\n        setLoading(false)\r\n        setRecipes(prev => newRecipes)\r\n    }\r\n\r\n    const chooseRepice = (food) => {\r\n        // console.log(\"choose random food\");\r\n        // onSelected(food)\r\n        history.push(`/recipe_details/${food.id}`)\r\n    }\r\n\r\n    return <Container>\r\n        <h1 className=\"display-2 mb-5 text-center h1styleUser2\"> Favorite Recipes:</h1>\r\n\r\n        <Modal show={loading} className=\"text-center p-3\">\r\n            <Modal.Header >\r\n            </Modal.Header>\r\n            <Modal.Title classname=\"text-center display-2\">Loading Recipes...</Modal.Title>\r\n            <p>please wait</p>\r\n            <Modal.Body className=\"text-center\">\r\n                <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    variant=\"warning\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Row className=\"justify-content-center\">\r\n            {recipes.map((item, i) => <Card\r\n                key={i}\r\n                sm={6}\r\n                md={4}\r\n                text={'dark'}\r\n                style={{ width: '18rem' }}\r\n                className=\"m-3 styleCard\"\r\n            >\r\n                <div\r\n                    onClick={e => chooseRepice(item)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                >\r\n                    <Card.Img className=\"Foodsimg\" variant=\"top\" src={item.pic} height=\"160px\" weidth=\"240px\" />\r\n                    <Card.Header className=\"text-center\">{item.name}</Card.Header>\r\n\r\n                    {/* {item.allCategories && item.allCategories.map((type, i) => <span key={i}>| {type} </span>)} */}\r\n                    {/* <p className=\"text-center my-2\">\r\n                        {item.allCategories && item.allCategories.map((type, i) => {\r\n                            if (i === 0) {\r\n                                return <span className=\"text-capitalize\" key={i}> {type} </span>\r\n                            }\r\n                            return <span className=\"text-capitalize\" key={i}>| {type} </span>\r\n                        })}\r\n                    </p> */}\r\n\r\n                </div>\r\n                <Card.Footer className=\"text-black\">\r\n\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <hr></hr>\r\n                        <Col className=\"text-center\" >\r\n                            <FontAwesomeIcon onClick={e => remove(item.id)} icon={faTrashAlt} style={{ cursor: \"pointer\" }}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>)}\r\n        </Row>\r\n        <Row className=\"justify-content-center my-2\">\r\n            {!recipes.length && !loading && <Col md={{ span: 6 }} id=\"msgDefaultFAV\" className=\"my-4 text-center h1font\">\r\n                <p className=\"pt-5\">\r\n                    This recipes collection is empty :(\r\n                    <br></br>\r\n                    Start filling it up !\r\n                    <br></br>\r\n                    <FontAwesomeIcon icon={faThumbtack} />\r\n                </p>\r\n            </Col>}\r\n        </Row>\r\n\r\n    </Container>\r\n}\r\n\r\nexport default MyFavorites;","import { Card, Container, Row, Col, Modal, Button, Spinner } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSmileWink, faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getMyRecipes, setUnSeenRecipe } from \"../../../DAL/api\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst MyRecipes = ({ connected, hasPageAaccess }) => {\r\n    let history = useHistory();\r\n    const { id } = useParams()\r\n    const [loading, setLoading] = useState(true)\r\n    const [show, setShow] = useState(false);\r\n    const [deleteRecipe, setDeleteRecipe] = useState({ \"name\": \"\", \"id\": \"\" });\r\n    const [recipes, setRecipes] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        hasPageAaccess(connected, history);\r\n        window.scrollTo(0, 0)\r\n\r\n        // eslint-disable-next-line\r\n    }, [connected]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            window.scrollTo(0, 0);\r\n            const myRecipes = await getMyRecipes(id)\r\n            setLoading(false)\r\n            console.log(myRecipes);\r\n            if (myRecipes.error) {\r\n                alert(\"A connection problem ... Please refresh the site.\")\r\n            } else {\r\n                setRecipes(prev => myRecipes)\r\n            }\r\n        })()\r\n    }, [show])\r\n\r\n    const chooseRepice = (food) => {\r\n        history.push(`/updateRecipe_step1/${food.id}`)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    }, [show])\r\n\r\n\r\n\r\n    const handleShow = (name, id) => {\r\n        setDeleteRecipe(prev => ({ \"name\": name, \"id\": id }))\r\n        setShow(true)\r\n    };\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleDelete = async (recipeId) => {\r\n        const ChangeVisibility = await setUnSeenRecipe(recipeId);\r\n        setShow(false);\r\n    };\r\n\r\n    return <Container >\r\n        <h1 className=\"display-2 mb-5 text-center h1styleUser2\"> I Made It:</h1>\r\n\r\n        <Modal show={loading} className=\"text-center\">\r\n            <Modal.Header >\r\n            </Modal.Header>\r\n            <Modal.Title classname=\"text-center display-h1\">Loading Recipes...</Modal.Title>\r\n            <p>please wait</p>\r\n            <Modal.Body className=\"text-center\">\r\n                <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    variant=\"warning\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n        <Row className=\"justify-content-center mb-4\">\r\n            {recipes.map((item, i) => <Card\r\n                key={i}\r\n                sm={6}\r\n                md={4}\r\n                text={'dark'}\r\n                style={{ width: '18rem' }}\r\n                className=\"m-3 styleCard\"\r\n            >\r\n                <div\r\n                    onClick={() => history.push(`/recipe_details/${item.id}`)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                >\r\n                    <Card.Img className=\"Foodsimg\" variant=\"top\" src={item.pic} height=\"160px\" weidth=\"240px\" />\r\n                    <Card.Header className=\"text-center\">{item.name}</Card.Header>\r\n\r\n                    {/* <p className=\"text-center my-2\">\r\n                        {item.allCategories && item.allCategories.map((type, i) => {\r\n                            if (i === 0) {\r\n                                return <span className=\"text-capitalize\" key={i}> {type} </span>\r\n                            }\r\n                            return <span className=\"text-capitalize\" key={i}>| {type} </span>\r\n                        })}\r\n                    </p> */}\r\n\r\n                </div>\r\n                <Card.Footer className=\"text-black\">\r\n\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <hr></hr>\r\n                        <Col className=\"text-center\" >\r\n                            <FontAwesomeIcon onClick={e => chooseRepice(item)} icon={faEdit} style={{ cursor: \"pointer\" }}\r\n                            />\r\n                        </Col>\r\n                        <Col className=\"text-center\" >\r\n\r\n                            <FontAwesomeIcon onClick={() => handleShow(item.name, item.id)} icon={faTrashAlt} style={{ cursor: \"pointer\" }} />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>)}\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Warning !</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <strong>\r\n                        This will permanently delete the recipe:\r\n                        <spam className=\"text-danger\"> {deleteRecipe.name}</spam>, are you sure?\r\n                    </strong>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        return back\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={() => {\r\n                        console.log(\"to delete\", deleteRecipe.name);\r\n                        handleDelete(deleteRecipe.id)\r\n                    }}>\r\n                        Delete\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n            <Col></Col>\r\n            {!recipes.length && !loading && <Col md={{ span: 6 }} id=\"msgDefault\" className=\"text-center h1font my-5\">\r\n                Feel free to add a new recipe to the site !\r\n                <br></br>\r\n                <FontAwesomeIcon icon={faSmileWink} style={{}} />\r\n            </Col>}\r\n            <Col></Col>\r\n        </Row>\r\n\r\n    </Container>\r\n}\r\n\r\nexport default MyRecipes;","import { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Container, Row, Alert, Col, Form, Button, InputGroup, Spinner } from 'react-bootstrap';\r\nimport { updateUserInfo } from \"../../../DAL/api\";\r\n\r\nconst UserProfile = ({ connected, hasPageAaccess, getDetaildsFromDb, userUpdateHandler }) => {\r\n    let history = useHistory();\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const [details, setDetails] = useState({\r\n        email: { isRequired: true, pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, msg: [], value: \"\", isInVaild: false },\r\n        firstName: { isRequired: true, pattern: /\\w{2,}/, msg: [], value: \"\", isInVaild: false },\r\n        lastName: { isRequired: true, pattern: /\\w{2,}/, msg: [], value: \"\", isInVaild: false },\r\n        password: { isRequired: true, pattern: /[\\s\\S]{2,}/, msg: [], value: \"\", isInVaild: false },\r\n        // passwordVerification: { isRequired: true, pattern: /[\\s\\S]{2,}/, msg: [], value: \"\", isInVaild: false },\r\n    })\r\n\r\n    useEffect(() => {\r\n        hasPageAaccess(connected, history)\r\n        window.scrollTo(0, 0);\r\n    }, [connected])\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const user = userData()\r\n        // console.log(\"user\", user)\r\n    }, [])\r\n\r\n    const changeValues = (obj) => {\r\n        const temp = details;\r\n        for (let key in temp) {\r\n            temp[key].value = obj[key]\r\n        }\r\n        setDetails(prev => ({ ...temp }))\r\n    }\r\n\r\n\r\n    const userData = async () => {\r\n        try {\r\n            const getDetaildsFromloaclhost = JSON.parse(localStorage.getItem(\"user\")).id;\r\n            const user = await getDetaildsFromDb({ id: getDetaildsFromloaclhost })\r\n            console.log(\"user\", user);\r\n            await changeValues(...user)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        // console.log(\"enetr sumbit\");\r\n        const checkErrors = [];\r\n        for (const key in details) {\r\n            if (Object.hasOwnProperty.call(details, key)) {\r\n                checkErrors.push(validation({ name: key, value: details[key].value }))\r\n\r\n            }\r\n        }\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(false)\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        console.log(\"input whitout errors\");\r\n        event.preventDefault();\r\n\r\n        const allRelevantData = {\r\n            id: JSON.parse(localStorage.getItem(\"user\")).id,\r\n            email: details.email.value,\r\n            firstName: details.firstName.value,\r\n            lastName: details.lastName.value,\r\n            password: details.password.value\r\n        }\r\n        setLoading(true)\r\n        const checkUpdateDb = await updateUserInfo(allRelevantData)\r\n        setLoading(false)\r\n        console.log(\"checkUpdateDb\", checkUpdateDb);\r\n        if (!checkUpdateDb) {\r\n            setValidated(false);\r\n            setShow(true)\r\n            setTimeout(() => setShow(false), 3000)\r\n        } else {\r\n            setValidated(true);\r\n            alert(\"Updated successfully\")\r\n            // const info = { email: details.email.value, password: details.password.value }\r\n            // console.log(\"מה הגיע מעדכון פרטים:\", checkUpdateDb, \"מידע חדש מהקומפוננטה\", allRelevantData)\r\n            userUpdateHandler(checkUpdateDb)\r\n            history.push(\"/\")\r\n        }\r\n    };\r\n\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (value === \"\") {\r\n            isMsgShowing = true\r\n            errorMsg.push(`${name} is required.`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`${name} is not valid.`)\r\n            isMsgShowing = true\r\n        }\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n    return <Container fluid className=\"aboutmeBkgd p-3\">\r\n        <Alert show={show} variant=\"danger\" className=\"text-center\" onClose={() => setShow(false)}>\r\n            User email already exist. Please try with another email.\r\n        </Alert>\r\n        <h1 className=\"display-2 mb-5 bolder\"> My Profile </h1>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"w-50 mb-5\">\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group >\r\n                        <Form.Label>First name:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"firstName\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.firstName.value}\r\n                                isInvalid={details.firstName.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.firstName.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md={12}>\r\n                    <Form.Group >\r\n                        <Form.Label>Last name:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.lastName.value}\r\n                                isInvalid={details.lastName.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.lastName.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.email.value}\r\n                                isInvalid={details.email.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.email.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Col>\r\n                {/* <Col md={3}>\r\n                    <Form.Group >\r\n                        <Form.Label>Password</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.password.value}\r\n                                isInvalid={details.password.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.password.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Col> */}\r\n            </Row>\r\n\r\n            <Button variant=\"outline-dark\" type=\"submit\" className=\"mr-2\">\r\n                {loading && <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                />}\r\n                {loading ? <span>Loading...</span> : <span>update</span>}\r\n            </Button>\r\n\r\n        </Form>\r\n    </Container >\r\n}\r\n\r\nexport default UserProfile;","import { Link, useHistory, Prompt } from \"react-router-dom\";\r\nimport { Button, Form, InputGroup, Alert, Container, Col, Row, Spinner } from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\nimport { getCatsAndDiets, isRecipeNameAvailable } from '../../../DAL/api'\r\n\r\n\r\nconst NewRecipe = ({ connected, hasPageAaccess }) => {\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        hasPageAaccess(connected, history)\r\n        //eslint-disable-next-line\r\n    }, [connected])\r\n\r\n\r\n    useEffect(() => {\r\n        const addingDataFromDb = async () => {\r\n            const data = await getCatsAndDiets();\r\n\r\n            let inputsPage1Local;\r\n            if (localStorage.getItem(\"step1\")) {\r\n                inputsPage1Local = JSON.parse(localStorage.getItem(\"step1\"));\r\n                console.log(\"inputsPage1Local\", inputsPage1Local);\r\n            }\r\n\r\n            if (inputsPage1Local && inputsPage1Local.id) {\r\n                data[0].forEach(el => el.selected = false);\r\n                data[1].forEach(el => el.selected = false);\r\n\r\n                // console.log(\"data\", data);\r\n                localStorage.removeItem(\"step1\")\r\n                localStorage.removeItem(\"step2\")\r\n                localStorage.removeItem(\"step3\")\r\n            } else {\r\n                for (const key in inputsPage1Local) {\r\n                    if (key in details) {\r\n                        details[key].value = inputsPage1Local[key];\r\n                    }\r\n                    if (key === \"diets\") {\r\n                        data[0].forEach(el => {\r\n                            const id = +el.id || el.id\r\n                            if (inputsPage1Local[key].includes(id)) {\r\n                                el.selected = true;\r\n                            } else {\r\n                                el.selected = false;\r\n                            }\r\n                        })\r\n                    }\r\n                    if (key === \"categories\") {\r\n                        data[1].forEach(el => {\r\n                            const id = +el.id || el.id\r\n                            if (inputsPage1Local[key].includes(id)) {\r\n                                el.selected = true;\r\n                            } else {\r\n                                el.selected = false;\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            setDetails({\r\n                ...details,\r\n            });\r\n            const checkboxsInfo = { diets: data[0], categories: data[1] }\r\n            // console.log(\"details\", details);\r\n            setCheckboxs(prev => checkboxsInfo)\r\n        }\r\n\r\n        addingDataFromDb()\r\n    }, [])\r\n\r\n\r\n    const updateStep1 = (data) => {\r\n        localStorage.setItem(\"step1\", JSON.stringify(data));\r\n    };\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const [checkboxs, setCheckboxs] = useState({ diets: [], categories: [] });\r\n    const [details, setDetails] = useState({\r\n        categories: { isRequired: true, pattern: /[\\s\\S]{1,}/, msg: [], value: [], isInVaild: false },\r\n        diets: { isRequired: true, pattern: /[\\s\\S]{1,}/, msg: [], value: [], isInVaild: false },\r\n        recipeName: { isRequired: true, pattern: /\\w{3,}/, msg: [], value: \"\", isInVaild: false },\r\n        description: { isRequired: true, pattern: /[\\s\\S]{5,110}/, msg: [], value: \"\", isInVaild: false },\r\n        Servings: { isRequired: true, pattern: /\\d/, msg: [], value: \"\", isInVaild: false },\r\n        CookingTime: { isRequired: true, pattern: /\\d/, msg: [], value: \"\", isInVaild: false },\r\n        prepTimeMins: { isRequired: true, pattern: /\\d/, msg: [], value: \"\", isInVaild: false },\r\n        level: { isRequired: true, pattern: /[\\s\\S]{2,}/, msg: [], value: \"\", isInVaild: false },\r\n    })\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        // event.preventDefault();\r\n        event.preventDefault();\r\n        console.log(\"enetr sumbit\");\r\n        const checkErrors = [];\r\n        for (const key in details) {\r\n            if (Object.hasOwnProperty.call(details, key)) {\r\n                // console.log(\"before validation-\", key, details[key].value);\r\n                checkErrors.push(validation({ name: key, value: details[key].value }))\r\n            }\r\n        }\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(false)\r\n                event.stopPropagation();\r\n                console.log(\"err\", error);\r\n                return;\r\n            }\r\n        }\r\n        setLoading(true)\r\n        const statusRecipeName = await isRecipeNameAvailable(details.recipeName.value);\r\n        console.log(\"statusRecipeName\", statusRecipeName)\r\n        setLoading(false)\r\n        if (!statusRecipeName) {\r\n            setValidated(false)\r\n            event.stopPropagation();\r\n            setShow(true)\r\n            setTimeout(() => setShow(false), 2000)\r\n            window.scrollTo(0, 0);\r\n            return;\r\n        }\r\n\r\n        console.log(\"input whitout errors!!!\");\r\n        setValidated(true);\r\n\r\n\r\n        const allRelevantData = {\r\n            userId: JSON.parse(localStorage.getItem(\"user\")).id,\r\n            recipeName: details.recipeName.value,\r\n            description: details.description.value,\r\n            Servings: details.Servings.value,\r\n            CookingTime: details.CookingTime.value,\r\n            prepTimeMins: details.prepTimeMins.value,\r\n            level: details.level.value,\r\n            categories: details.categories.value,\r\n            diets: details.diets.value,\r\n        }\r\n\r\n        updateStep1(allRelevantData)\r\n        history.push(\"/newRecipe_step2\")\r\n    }\r\n\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (name === \"categories\" && value.length < 1) {\r\n            isMsgShowing = true\r\n            errorMsg.push(`This Field is Required.`)\r\n        } else if (name === \"diets\" && value.length < 1) {\r\n            isMsgShowing = true\r\n            errorMsg.push(`This Field is Required.`)\r\n        } else if (value === \"\") {\r\n            isMsgShowing = true\r\n            errorMsg.push(`This Field is Required.`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`Not Valid.`)\r\n            isMsgShowing = true\r\n        }\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n\r\n    const updateBox = (e, listName) => {\r\n        let data = {\r\n            checked: e.target.checked,\r\n            currId: +e.target.id || e.target.id,\r\n            currName: e.target.name,\r\n            allChecked: []\r\n        }\r\n        console.log(\"updateData\", data);\r\n        let { [listName]: newBox } = checkboxs;\r\n        for (let box of newBox) {\r\n            if (box.id === data.currId && box.name === data.currName) {\r\n                box.selected = data.checked;\r\n            }\r\n            if (box.selected) {\r\n                data.allChecked.push(box.id)\r\n            }\r\n        }\r\n        let isMsgShowing;\r\n        let errmsg = \"\";\r\n        if (!!data.allChecked.length) {\r\n            errmsg = \"\";\r\n            isMsgShowing = false;\r\n        } else {\r\n            errmsg = \"Please select at least one option\"\r\n            isMsgShowing = true;\r\n        }\r\n        setCheckboxs(prev => ({ ...prev, [listName]: newBox }));\r\n        setDetails(prevDetails => ({ ...prevDetails, [listName]: { ...prevDetails[listName], value: data.allChecked, isInVaild: isMsgShowing, msg: errmsg } }))\r\n    }\r\n\r\n    const formIsHalfFiled = Object.values(details)\r\n        .filter(item => item.value && (item.value !== \"\" || item.value.length > 0))\r\n        .length > 0 && Object.values(details)\r\n            .filter(item => item.value && (item.value !== \"\" || item.value.length > 0))\r\n            .length < 8;\r\n\r\n    console.log(\"formIsHalfFiled\", formIsHalfFiled);\r\n\r\n\r\n    return <Container fluid>\r\n        <h1 className=\"display-2 text-center\"> Add A New Recipe</h1>\r\n        <Row className=\"phase-top\">\r\n            <Col className=\"active\">1</Col>\r\n            <Col >\r\n                <Link to=\"/newRecipe_step2\"> 2</Link>\r\n            </Col>\r\n            <Col >\r\n                <Link to=\"/newRecipe_step3\"> 3</Link>\r\n            </Col>\r\n\r\n            {/* <Prompt when={formIsHalfFiled} message=\"You have unsaved changes. Sure you want to leave?\" /> */}\r\n\r\n\r\n        </Row>\r\n        <Alert show={show} variant=\"secondary\" onClose={() => setShow(false)}>\r\n            User recipe name already exist. Please try with another name.\r\n        </Alert>\r\n        <Row className=\"justify-content-center\">\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"w-75 text-center\">\r\n\r\n                <Form.Group >\r\n                    <Form.Label>Recipe Name:</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"recipeName\"\r\n                            onBlur={e => validation(e.target)}\r\n                            onChange={(e) => validation(e.target)}\r\n                            value={details.recipeName.value}\r\n                            placeholder=\"Enter recipe name...\"\r\n                            isInvalid={details.recipeName.isInVaild}\r\n                            required />\r\n                        <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                            {details.recipeName.msg}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md={12} lg={3} className=\"text-center\">\r\n                        <Form.Label >Servings:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                name=\"Servings\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.Servings.value}\r\n                                isInvalid={details.Servings.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.Servings.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md={12} lg={3} className=\"text-center\">\r\n                        <Form.Label>Difficulty:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"level\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.level.value}\r\n                                isInvalid={details.level.isInVaild}\r\n                                required>\r\n                                <option value={\"\"}>Select level...</option>\r\n                                <option value={\"easy\"}>Easy</option>\r\n                                <option value={\"medium\"}>Intermediate</option>\r\n                                <option value={\"hard\"}>Hard</option>\r\n                            </Form.Control>\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.level.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md={12} lg={3} className=\"text-center\">\r\n                        <Form.Label>Cooking Time in Minutes:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                name=\"CookingTime\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.CookingTime.value}\r\n                                isInvalid={details.CookingTime.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.CookingTime.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group as={Col} md={12} lg={3} className=\"text-center\">\r\n                        <Form.Label>Prep Time in Minutes:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                name=\"prepTimeMins\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.prepTimeMins.value}\r\n                                isInvalid={details.prepTimeMins.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.prepTimeMins.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n\r\n                <Form.Group >\r\n                    <Form.Label>Description:</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            type=\"textarea\"\r\n                            name=\"description\"\r\n                            onBlur={e => validation(e.target)}\r\n                            onChange={(e) => validation(e.target)}\r\n                            value={details.description.value}\r\n                            placeholder=\"Enter description...\"\r\n                            isInvalid={details.description.isInVaild}\r\n                            required\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                            {details.description.msg}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n\r\n\r\n                <hr></hr>\r\n                <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Categories:</Form.Label>\r\n                        <div as=\"inline-checkbox\" className=\"mb-3\">\r\n                            {checkboxs.categories.map(type => <Form.Check\r\n                                inline\r\n                                hasValidation\r\n                                label={type.name}\r\n                                name={type.name}\r\n                                id={type.id}\r\n                                type='checkbox'\r\n                                isInvalid={details.categories.isInVaild}\r\n                                checked={type.selected}\r\n                                onChange={e => updateBox(e, \"categories\")}\r\n                                onBlur={e => updateBox(e, \"categories\")} />\r\n                            )}\r\n                        </div>\r\n                        {details.categories.msg && <small className=\"categoriesDietsErrMsg\">{details.categories.msg} </small>}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Diets:</Form.Label>\r\n                        <div as=\"inline-checkbox\" className=\"mb-3\">\r\n                            {checkboxs.diets.map(type => <Form.Check\r\n                                inline\r\n                                label={type.name}\r\n                                name={type.name}\r\n                                id={type.id}\r\n                                type='checkbox'\r\n                                isInvalid={details.diets.isInVaild}\r\n                                checked={type.selected}\r\n                                onBlur={e => updateBox(e, \"diets\")}\r\n                                onChange={e => updateBox(e, \"diets\")} />\r\n                            )}\r\n                        </div>\r\n                        {details.diets.msg && <small className=\"categoriesDietsErrMsg\">{details.diets.msg} </small>}\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <hr></hr>\r\n                <Row className=\"text-center my-3 justify-content-center\">\r\n                    <Button variant=\"outline-dark\" type=\"submit\">\r\n                        {loading && <Spinner\r\n                            as=\"span\"\r\n                            animation=\"border\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />}\r\n                        {loading ? <span>Loading...</span> : <span>Continue to the Next Step</span>}\r\n                    </Button>\r\n                </Row>\r\n            </Form>\r\n        </Row>\r\n    </Container >\r\n}\r\n\r\nexport default NewRecipe;","export default __webpack_public_path__ + \"static/media/whatapp2.1f80f06f.jfif\";","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Container, Row, Col, Button, Form, Card, Modal, Spinner } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUtensils, faPrint } from \"@fortawesome/free-solid-svg-icons\";\r\nimport facebook from '../imgs/facebook2.png'\r\nimport whatapp from '../imgs/whatapp2.jfif'\r\n\r\n\r\n\r\nconst RecipeInfo = ({ hasPageAaccess, onselect }) => {\r\n    let { id } = useParams()\r\n    let history = useHistory();\r\n    const [loading, setLoading] = useState(true)\r\n    const [selectRecipe, setSelectRecipe] = useState({\r\n        name: \"\",\r\n        image: \"\",\r\n        addedDate: \"\",\r\n        views: 0,\r\n        // likes: 0,\r\n        date: \"\",\r\n        userID: \"\",\r\n        Servings: 0,\r\n        diets: [],\r\n        ingredients: [],\r\n        instructions: [],\r\n        prepTimeMins: 0,\r\n        CookingTime: 0,\r\n        description: \"\",\r\n        categories: [],\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        getRecipe(id)\r\n    }, [])\r\n\r\n    const updateStateRecipe = (data) => {\r\n        if (data) {\r\n            setSelectRecipe(prev => data)\r\n        }\r\n    }\r\n    const getRecipe = async (id) => {\r\n        try {\r\n            const chosenRecipe = await onselect(id)\r\n                .then(data => {\r\n                    console.log(\"data\", data);\r\n                    setSelectRecipe(prev => (data))\r\n                    setLoading(false)\r\n                })\r\n                .catch(err => alert(\"error\", err))\r\n            console.log(\"chosenRecipe\", chosenRecipe);\r\n            // const getdata = await updateStateRecipe(chosenRecipe)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const printRecipe = () => {\r\n        window.print()\r\n    }\r\n    const exit = () => {\r\n        onselect({})\r\n        history.push(\"/\")\r\n    }\r\n\r\n\r\n    // const [show, setShow] = useState(true);\r\n\r\n    // const handleClose = () => setShow(false);\r\n    // const handleShow = () => setShow(true);\r\n\r\n    return <Container fluid className=\"mx-0\">\r\n\r\n        <Modal show={loading} className=\"text-center\">\r\n            <Modal.Header >\r\n            </Modal.Header>\r\n            <Modal.Title classname=\"text-center display-h1\">Loading Recipe...</Modal.Title>\r\n            <Modal.Body className=\"text-center\">\r\n                <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n        <Row id=\"introduction\" className=\"align-items-center\">\r\n            <Col lg={5} >\r\n                <h1 className=\"display-3\"> {selectRecipe.name}</h1>\r\n                <ul horizontal id=\"listStyle\">\r\n                    <li className=\"px-2\">Views: {selectRecipe.views}</li>\r\n                    {/* <li className=\"px-2\">comments: { }</li> */}\r\n                    <li className=\"px-2\">Preparation Time: {selectRecipe.prepTimeMins}</li>\r\n                    <li className=\"px-2\">Cooking Time: {selectRecipe.CookingTime}</li>\r\n                    <li className=\"px-2\">By: {selectRecipe.username}</li>\r\n                </ul>\r\n                <h4 className=\"mt-5\"><u>Description:</u> {selectRecipe.description}</h4>\r\n                <div className=\"my-5 notPrint\">\r\n                    <Button variant=\"outline-dark\" onClick={exit}>Return to Home Page</Button>\r\n                </div>\r\n            </Col>\r\n            <Col lg={7} className=\" mx-0 px-0\">\r\n                <img id=\"imgFood\" alt=\"food pic\" src={selectRecipe.image} style={{ minHeight: '552px', maxHeight: '552px', width: 'inherit', objectFit: \"cover\" }}></img>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"styleRow justify-content-md-center text-center p-3\">\r\n            <Card\r\n                className=\"mb-2\"\r\n                id=\"styleCardInfo\"\r\n            >\r\n                <Row className=\"justify-content-md-center text-center p-3\">\r\n                    <Col>\r\n                        <h4><u>Date:</u></h4>\r\n                        <p>{selectRecipe.date}</p>\r\n                    </Col>\r\n                    <Col>\r\n                        <h4><u>Difficulty:</u></h4>\r\n                        <p className=\"text-capitalize\">{selectRecipe.level}</p>\r\n                    </Col>\r\n                    <Col>\r\n                        <h4><u>Categories:</u></h4>\r\n                        {selectRecipe.categories.map((type, i) => <p key={i}>{type}</p>)}\r\n                    </Col>\r\n                    <Col>\r\n                        <h4><u>diets:</u></h4>\r\n                        {selectRecipe.diets && selectRecipe.diets.map((type, i) => <p key={i}>{type}</p>)}\r\n                    </Col>\r\n                    <Col>\r\n                        <h4><u>Servings:</u></h4>\r\n                        <h4>{selectRecipe.Servings}</h4>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </Row>\r\n        <div className=\"pagebreak\"> </div>\r\n        <Row className=\"styleRow\">\r\n            <Col className=\"my-5\">\r\n                <h1 className=\"mt-4\">Ingredients:</h1>\r\n                <p>\r\n                    <a style={{ marginRight: \"5px\" }} target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?text=http://localhost:3000/recipe_details/${selectRecipe.id}`} data-action=\"share/whatsapp/share\">\r\n                        <img alt=\"whatapp\" src={whatapp} style={{ maxHeight: \"16px\", width: \"34px\" }} />\r\n\r\n                    </a>\r\n                    {/* <a target=\"_blank\" rel=\"noreferrer\" href={`https://www.facebook.com/sharer/sharer.php?u=http://localhost:3000/recipe_details/${selectRecipe.id}`} class=\"fb-xfbml-parse-ignore\">\r\n                        <img alt=\"facebook\" src={facebook} style={{ maxHeight: \"16px\", width: \"34px\" }} />\r\n                    </a> */}\r\n                    <FontAwesomeIcon icon={faPrint} className=\"mx-2 mb-0 pb-0\" onClick={printRecipe} style={{ cursor: \"pointer\" }} />\r\n\r\n                </p>\r\n                <p>To create a shopping list -<br></br> highlight the missing ingredients and click on the print icon</p>\r\n                {selectRecipe.ingredients && selectRecipe.ingredients.map((ingredient, i) =>\r\n                    <Form.Check key={i} className=\"checkItems\" column=\"lg\" lg={2} type=\"checkbox\" label={ingredient} />\r\n                )}\r\n                {/* <hr></hr> */}\r\n            </Col>\r\n            {/* </Row>\r\n        <Row> */}\r\n            <Col className=\"my-5 styleBorder\">\r\n                <h1 className=\"my-4\">Directions:</h1>\r\n                {selectRecipe.instructions && selectRecipe.instructions.map((step, i) =>\r\n                    <div>\r\n                        <h3>\r\n                            <FontAwesomeIcon icon={faUtensils} className=\"mr-3\" />\r\n                            Step {i + 1}\r\n                        </h3>\r\n                        <p>{step}</p>\r\n                    </div>\r\n                )}\r\n                {/* <hr></hr> */}\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center p-3\">\r\n            <div className=\"text-center notPrint\">\r\n                <Button className=\"mr-2\" variant=\"outline-warning\" onClick={exit}>Go Back to Home Page</Button>\r\n            </div>\r\n        </Row>\r\n\r\n    </Container>\r\n}\r\n\r\nexport default RecipeInfo;","import { Link, useParams } from \"react-router-dom\";\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\n\r\nconst UserSecondNavber = ({ connected }) => {\r\n    const { id } = useParams();\r\n    return <Navbar className=\"justify-content-center userNav\" activeKey=\"/home\">\r\n        <Nav>\r\n            <Nav.Link\r\n                // style={{ display: connected ? 'block' : 'none' }}\r\n                className=\"px-2 \">\r\n                <Link className=\"px-2 mx-4\" to={\"/User_Profile/\" + id}>User Profile</Link>\r\n                <Link className=\"px-2 mx-4\" to={\"/MyFavorites/\" + id}>My Favorites</Link>\r\n                <Link className=\"px-2 mx-4\" to={\"/My_Recipes/\" + id}>My Recipes</Link>\r\n            </Nav.Link>\r\n        </Nav>\r\n    </Navbar>\r\n}\r\n\r\nexport default UserSecondNavber;","import { Container, Col, Row } from \"react-bootstrap\"\r\n\r\nexport default function ErrorMsg() {\r\n    return <>\r\n        <Container >\r\n            <Row className=\"py-4\">\r\n                <Col md={{ span: 6, offset: 3 }} id=\"msg404\"></Col>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Formik, Field, Form, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// export default function Aaa() {\r\n//     return <Formik\r\n//         initialValues={{ firstName: '', lastName: '', email: '' }}\r\n//         validationSchema={Yup.object({\r\n//             firstName: Yup.string()\r\n//                 .max(15, 'Must be 15 characters or less')\r\n//                 .required('Required'),\r\n//             lastName: Yup.string()\r\n//                 .max(20, 'Must be 20 characters or less')\r\n//                 .required('Required'),\r\n//             email: Yup.string().email('Invalid email address').required('Required'),\r\n//         })}\r\n//         onSubmit={(values, { setSubmitting }) => {\r\n//             setTimeout(() => {\r\n//                 alert(JSON.stringify(values, null, 2));\r\n//                 setSubmitting(false);\r\n//             }, 400);\r\n//         }}\r\n//     >\r\n//         <Form>\r\n//             <label htmlFor=\"firstName\">First Name</label>\r\n//             <Field name=\"firstName\" type=\"text\" />\r\n//             <ErrorMessage name=\"firstName\" />\r\n\r\n//             <label htmlFor=\"lastName\">Last Name</label>\r\n//             <Field name=\"lastName\" type=\"text\" />\r\n//             <ErrorMessage name=\"lastName\" />\r\n\r\n//             <label htmlFor=\"email\">Email Address</label>\r\n//             <Field name=\"email\" type=\"email\" />\r\n//             <ErrorMessage name=\"email\" />\r\n\r\n//             <button type=\"submit\">Submit</button>\r\n//         </Form>\r\n//     </Formik>\r\n// }\r\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { Container, Row, Col, Button, Form, Card, InputGroup, ListGroup, Alert, FormControl } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { unitsAndIngs } from '../../../DAL/api'\r\n\r\n\r\n\r\nfunction Phase2() {\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n    const [ingsUnits, setIngsUnits] = useState([]);\r\n    const [validated, setValidated] = useState(false);\r\n    const [combineData, setCombineData] = useState([]);\r\n    const [details, setDetails] = useState({\r\n        ingredient: { isRequired: true, msg: [], pattern: /[\\s\\S]{1,}/, value: \"\", id: null, isInVaild: false },\r\n        unit: { isRequired: true, msg: [], pattern: /[\\s\\S]{1,}/, value: \"\", id: null, isInVaild: false },\r\n        quantity: { isRequired: true, msg: [], pattern: /[\\s\\S]{1,}/, value: \"\", isInVaild: false },\r\n        unitlst: [],\r\n        ingredientlst: [],\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        (async () => {\r\n            const dataFromDb = await unitsAndIngs()\r\n            setIngsUnits(pev => [dataFromDb[0], dataFromDb[1]])\r\n\r\n            if (localStorage.getItem(\"step2\")) {\r\n                const inputsPage2ocal = JSON.parse(localStorage.getItem(\"step2\"))\r\n                setCombineData(prev => inputsPage2ocal)\r\n            }\r\n\r\n        })()\r\n\r\n    }, [])\r\n\r\n    const checkIngredients = () => {\r\n        if (combineData.length < 2) {\r\n            setShow(true)\r\n            window.scrollTo(0, 0);\r\n            setTimeout(() => setShow(false), 3000)\r\n            return;\r\n        }\r\n        localStorage.setItem(\"step2\", JSON.stringify(combineData));\r\n        console.log(\"combineData\", combineData);\r\n        history.push(\"/newRecipe_step3\")\r\n    }\r\n\r\n    const removeName = (data) => {\r\n        setCombineData(prev => prev.filter(item => item !== data))\r\n    }\r\n\r\n\r\n\r\n    const findName = (lst, value) => lst.filter((item, i) => {\r\n        return item.name.toLowerCase().startsWith(value.toLowerCase())\r\n    });\r\n\r\n    const handleSubmit = (event) => {\r\n        setDetails(prev => ({\r\n            ...prev,\r\n            unitlst: [],\r\n            ingredientlst: [],\r\n        }))\r\n\r\n\r\n        event.preventDefault();\r\n        let status = false;\r\n        const checkErrors = [];\r\n        for (const key in details) {\r\n            if (!key.includes('lst')) {\r\n                // console.log(key, details[key].value)\r\n                checkErrors.push(validation({ name: key, value: details[key].value }));\r\n            }\r\n            // if (name === \"ingredient\" && !!value) {\r\n            //     if (!ingsUnits[0].includes(value)) {\r\n            //         isMsgShowing = true\r\n            //         errorMsg.push(`Select ${name} that exists in the website.`)\r\n            //     }\r\n            // }\r\n        }\r\n\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(status)\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                // console.log(error, details);\r\n                return;\r\n            }\r\n        }\r\n        setValidated(!status);\r\n        // event.preventDefault();\r\n        const data = {\r\n            ingredient: {\r\n                id: details.ingredient.id,\r\n                name: details.ingredient.value,\r\n            },\r\n            unit: {\r\n                id: details.unit.id,\r\n                name: details.unit.value,\r\n            },\r\n            quantity: details.quantity.value\r\n        }\r\n        const checkDuplicates = combineData.find(ele => ele.ingredient.id === data.ingredient.id)\r\n        if (checkDuplicates) {\r\n            alert(\"You cannot select the same ingredient twice.\")\r\n            return;\r\n        }\r\n        // console.log(combineData);\r\n        setCombineData(prev => [...prev, data]);\r\n        const temp = {\r\n            ...details,\r\n            ingredient: { ...details[\"ingredient\"], value: \"\", id: \"\", isInVaild: false },\r\n            unit: { ...details[\"unit\"], value: \"\", id: \"\", isInVaild: false },\r\n            quantity: { ...details[\"quantity\"], value: \"\", isInVaild: false }\r\n        }\r\n        setDetails(temp)\r\n    }\r\n\r\n\r\n    const updateValue = (type, { id, name }) => {\r\n        setDetails(prev => ({ ...prev, [type]: { ...prev[type], value: name, id }, [type + \"lst\"]: [] }))\r\n    }\r\n\r\n    // name === \"unit\"\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (value === \"\" || value === undefined) {\r\n            isMsgShowing = true\r\n            errorMsg.push(`${name} is required.`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`${name} is not valid.`)\r\n            isMsgShowing = true\r\n        }\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n\r\n\r\n\r\n        // console.log(details);\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n\r\n    const updateDropDown = async ({ name, value }) => {\r\n        try {\r\n            validation({ name, value });\r\n            if (name === \"quantity\") {\r\n                setDetails(prev => ({ ...prev, [name]: { ...prev[name], value: value.name, id: value.id } }))\r\n            } else {\r\n                const index = name === \"unit\" ? 1 : 0;\r\n                // const newNamesLst = await getRecipeNames()\r\n                // const newNamesLst = await apiFun()\r\n                // console.log(\"newNamesLst\", newNamesLst);\r\n                const filerOne = await findName(ingsUnits[index], value)\r\n                // console.log(\"filerOne\", filerOne);\r\n                if (!filerOne.length) {\r\n                    let isMsgShowing = true\r\n                    let errorMsg = [`Select ${name} that exists in the website.`]\r\n                    setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value: value.name, isInVaild: isMsgShowing, msg: errorMsg }, [name + \"lst\"]: [] }))\r\n                    return;\r\n                }\r\n                const filterd = value ? filerOne.slice(0, 5) : [];\r\n                // console.log(\"filterd\", filterd);\r\n                setDetails(prev => ({ ...prev, [name]: { ...prev[name], value: value.name, id: value.id }, [name + \"lst\"]: filterd }))\r\n\r\n            }\r\n        } catch (err) {\r\n            alert(err)\r\n        }\r\n    }\r\n\r\n    const formIsHalfFiled = Object.values(details)\r\n        .filter(item => item.value && item.value !== \"\")\r\n        .length > 0 && Object.values(details)\r\n            .filter(item => item.value && item.value !== \"\")\r\n            .length < 3;\r\n\r\n    console.log(\"formIsHalfFiled\", formIsHalfFiled);\r\n\r\n\r\n    return <Container fluid className=\"mb-5\">\r\n        <h1 className=\"display-2 text-center\"> Add A New Recipe</h1>\r\n        <Row className=\"phase-top\">\r\n            <Col > <Link to=\"/newRecipe_step1\"> 1  </Link>  </Col>\r\n            <Col className=\"active\">2</Col>\r\n            <Col > <Link to=\"/newRecipe_step3\"> 3  </Link>  </Col>\r\n        </Row>\r\n\r\n        <Alert show={show} variant=\"danger\" onClose={() => setShow(false)}>\r\n            Please add at least 2 Ingredients.\r\n        </Alert>\r\n\r\n\r\n        {/* <Prompt when={formIsHalfFiled} message=\"You have unsaved changes. Sure you want to leave?\" /> */}\r\n\r\n\r\n        <h1 className=\"display-4 pb-2\">Ingredients:</h1>\r\n        <p>Enter at least two ingredients.</p>\r\n        <Row className=\"justify-content-center mb-4 mediaStyle\">\r\n            <Col >\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Row >\r\n                        <Form.Group as={Col}\r\n                            className=\"px-1\"\r\n                        >\r\n                            <InputGroup\r\n                                hasValidation>\r\n                                <FormControl\r\n                                    placeholder=\"Enter quantity\"\r\n                                    type=\"number\"\r\n                                    name=\"quantity\"\r\n                                    value={details.quantity.value}\r\n                                    onChange={e => validation(e.target)}\r\n                                    onblur={e => validation(e.target)}\r\n                                    isInvalid={details.quantity.isInVaild}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                    {details.quantity.msg}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"px-1\" hasValidation>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autocomplete=\"off\"\r\n                                name=\"unit\"\r\n                                value={details.unit.value}\r\n                                onChange={e => updateDropDown(e.target)}\r\n                                onblur={e => updateDropDown(e.target)}\r\n                                placeholder=\"Enter measuring unit...\"\r\n                                // className=\"mr-sm-1\"\r\n                                isInvalid={details.unit.isInVaild}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.unit.msg}\r\n                            </Form.Control.Feedback>\r\n                            <ListGroup>\r\n                                {!!details.unitlst.length && details.unitlst.slice(0, 3).map((unit, i) => <ListGroup.Item\r\n                                    key={i}\r\n                                    onClick={() => updateValue(\"unit\", unit)}\r\n                                >\r\n                                    {unit.name}</ListGroup.Item>)}\r\n                            </ListGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} hasValidation className=\"px-1\">\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autocomplete=\"off\"\r\n                                name=\"ingredient\"\r\n                                value={details.ingredient.value}\r\n                                onChange={e => updateDropDown(e.target)}\r\n                                onblur={e => updateDropDown(e.target)}\r\n                                placeholder=\"Enter ingredient\"\r\n                                // className=\"mr-sm-1\"\r\n                                isInvalid={details.ingredient.isInVaild}\r\n                            // required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.ingredient.msg}\r\n                            </Form.Control.Feedback>\r\n                            <ListGroup id=\"diplayZ\">\r\n                                {!!details.ingredientlst.length && details.ingredientlst.map((ing, i) => <ListGroup.Item\r\n                                    key={i}\r\n                                    onClick={() => updateValue(\"ingredient\", ing)}\r\n                                >\r\n                                    {ing.name}</ListGroup.Item>)}\r\n                            </ListGroup>\r\n                        </Form.Group>\r\n\r\n\r\n\r\n\r\n                        <Col>\r\n                            <Button type=\"submit\" className=\"mb-2\" variant=\"warning\"> Add </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n            <Col md=\"5 mb-4\">\r\n                {!combineData.length && <div className=\"text-center justify-content-center\" id=\"msgNoIngredient\">\r\n                    <div id=\"noIngredient\">\r\n                    </div>\r\n                    <h4>\r\n                        No Ingredients were Selected...\r\n                    </h4>\r\n                </div>}\r\n                <div>\r\n                    <ol className=\"list-group\">\r\n                        {!!combineData.length && combineData.map((data, i) => <li\r\n                            key={i}\r\n                            className=\"list-group-item\">\r\n                            <FontAwesomeIcon\r\n                                onClick={() => removeName(data)}\r\n                                icon={faTrashAlt}\r\n                                className=\"mr-3\"\r\n                            />\r\n                            | Ingredient {i + 1} : {data.quantity} {data.unit.name} {data.ingredient.name}</li>)}\r\n                    </ol>\r\n                </div>\r\n\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"text-center my-3 mx-2 justify-content-between\">\r\n            <div >\r\n                <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => history.push(\"/newRecipe_step1\")}  >\r\n                    Previous Step\r\n                </Button>\r\n            </div>\r\n            <div >\r\n                <Button\r\n                    variant=\"warning\"\r\n                    onClick={checkIngredients}  >\r\n                    Next Step\r\n                </Button>\r\n            </div>\r\n        </Row>\r\n    </Container>\r\n}\r\n\r\nexport default Phase2;\r\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport axios from \"axios\";\r\nimport { setNewRecipe, loadImgePY } from '../../../DAL/api'\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button, Form, Card, InputGroup, ListGroup, Alert, FormControl, Spinner } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nfunction Phase3() {\r\n    const history = useHistory()\r\n    const [file, setFile] = useState();\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const [validated, setValidated] = useState(false);\r\n    const [combineData, setCombineData] = useState([]);\r\n    const [details, setDetails] = useState({\r\n        instruction: { isRequired: true, msg: [], pattern: /[\\s\\S]{5,}/, value: \"\", isInVaild: false },\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        // if (localStorage.getItem(\"step3\")) {\r\n        //     const inputsPage3ocal = JSON.parse(localStorage.getItem(\"step3\"))\r\n        //     setCombineData(prev => inputsPage3ocal)\r\n        // }\r\n\r\n    }, [])\r\n\r\n\r\n    const finshRecipe = async () => {\r\n        let isOK = false;\r\n        let msg = \"\";\r\n        if (combineData.length < 2) {\r\n            isOK = true;\r\n            msg = \"Please enter at least 2 instructions\";\r\n        } else if (file === undefined) {\r\n            isOK = true;\r\n            msg = \"Please upload an image\";\r\n        }\r\n        setShow(isOK);\r\n        setErrMsg(msg)\r\n        window.scrollTo(0, 0);\r\n\r\n        if (!isOK) {\r\n            setLoading(true)\r\n            const data = {\r\n                recipe: JSON.parse(localStorage.getItem(\"step1\")),\r\n                ingredients: JSON.parse(localStorage.getItem(\"step2\")),\r\n                instructions: combineData\r\n            }\r\n            const newImage = new FormData()\r\n            newImage.append(\"image\", file)\r\n\r\n            const respone = await setNewRecipe(data, newImage)\r\n            setLoading(false)\r\n            if (respone) {\r\n                console.log(respone, \"respone\")\r\n                history.push(`/Phase4/${respone}`)\r\n            } else {\r\n                setShow(true);\r\n                setErrMsg(\"oops...There was a problem with the recipe, please try again\")\r\n                window.scrollTo(0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const fileValidation = (target) => {\r\n        const File = target.files[0]\r\n        setFile(File)\r\n    }\r\n\r\n    const findInstruction = (data) => {\r\n        setCombineData(prev => prev.filter(item => item !== data))\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        let status = false;\r\n        const checkErrors = [];\r\n        for (const key in details) {\r\n            checkErrors.push(validation({ name: key, value: details[key].value }));\r\n        }\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(status)\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n        setValidated(!status);\r\n        event.preventDefault();\r\n        const data = details.instruction.value\r\n\r\n        setCombineData(prev => [...prev, data]);\r\n        setDetails(prevDetails => ({ ...prevDetails, instruction: { ...prevDetails.instruction, value: \" \" } }))\r\n    }\r\n\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (value === \"\" || value === undefined) {\r\n            isMsgShowing = true\r\n            errorMsg.push(`${name} is required.`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`${name} is not valid`)\r\n            isMsgShowing = true\r\n        }\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n\r\n\r\n\r\n        // console.log(details);\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n    const formIsHalfFiled = Object.values(details)\r\n        .filter(item => item.value && item.value !== \"\")\r\n        .length > 0 && !file;\r\n\r\n    console.log(\"formIsHalfFiled\", formIsHalfFiled);\r\n\r\n\r\n\r\n\r\n    // const send = async () => {\r\n    //     const newImage = new FormData()\r\n    //     newImage.append(\"image\", file)\r\n    //     const res = await loadImgePY(\"610cde36607af3b8e64e7ed6\", newImage)\r\n    //     if (res) {\r\n    //         console.log(\"It workssssss😍🤩😏\");\r\n    //     } else {\r\n    //         console.log(\"opss... dont workssssss😑😑\");\r\n\r\n    //     }\r\n    // }\r\n\r\n    return <Container>\r\n        <h1 className=\"display-2 text-center\"> Add A New Recipe</h1>\r\n        <Row className=\"phase-top\">\r\n            <Col > <Link to=\"/newRecipe_step1\"> 1  </Link>  </Col>\r\n            <Col > <Link to=\"/newRecipe_step2\"> 2  </Link>  </Col>\r\n            <Col className=\"active\"> 3 </Col>\r\n        </Row>\r\n\r\n        {/* <Prompt when={formIsHalfFiled} message=\"You have unsaved changes. Sure you want to leave?\" /> */}\r\n\r\n\r\n        <Alert show={show} variant=\"secondary\" onClose={() => setShow(false)}>\r\n            {errMsg}\r\n        </Alert>\r\n\r\n\r\n        <h1 className=\"display-4 pb-2\">Instructions:</h1>\r\n        <Row >\r\n            {/* <Row className=\"align-items-center\"> */}\r\n            <Col >\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Row>\r\n                        <Form.Group as={Col}\r\n                            className=\"px-1\"\r\n                        >\r\n                            <InputGroup\r\n                                hasValidation>\r\n                                <FormControl\r\n                                    placeholder=\"Enter Instructions...\"\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    type=\"textarea\"\r\n                                    name=\"instruction\"\r\n                                    value={details.instruction.value}\r\n                                    onChange={e => validation(e.target)}\r\n                                    onblur={e => validation(e.target)}\r\n                                    isInvalid={details.instruction.isInVaild}\r\n                                    required\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                    enter at least 5 characters.\r\n                                    {/* {details.instruction.msg} */}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Col>\r\n                            <Button type=\"submit\" className=\"my-2\" variant=\"warning\"> Add Instructions </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n            <Col md=\"5\" className=\"pb-4\">\r\n                {!combineData.length && <div className=\"text-center justify-content-center\" id=\"msgNoIngredient\">\r\n                    <div id=\"noIngredient2\">\r\n                    </div>\r\n                    <h4>\r\n                        No Instructions Were Written yet...\r\n                    </h4>\r\n                </div>}\r\n                <div>\r\n                    <ol className=\"list-group\">\r\n                        {!!combineData.length && combineData.map((data, i) => <li\r\n                            key={i}\r\n                            className=\"list-group-item\">\r\n                            <FontAwesomeIcon\r\n                                onClick={() => findInstruction(data)}\r\n                                icon={faTrashAlt}\r\n                                className=\"mr-3\"\r\n                            />\r\n                            | Instruction {i + 1} : {data} </li>)}\r\n                    </ol>\r\n                </div>\r\n\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"styleRowUp justify-content-md-center text-center p-3\">\r\n            <Card\r\n                text='dark'\r\n                style={{ width: '18rem' }}\r\n                className=\"mb-2 text-center\"\r\n            >\r\n                <Card.Header>\r\n                    <h4>\r\n                        Upload your Recipe Image here:\r\n                    </h4>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <InputGroup hasValidation>\r\n                                <Form.File\r\n                                    label=\"Image: \"\r\n                                    // value={details.image.value}\r\n                                    name=\"image\"\r\n                                    onBlur={e => fileValidation(e.target)}\r\n                                    onChange={(e) => fileValidation(e.target)}\r\n                                    required\r\n                                // isInvalid={details.image.isInVaild}\r\n                                />\r\n                                {/* <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                            {details.image.msg}\r\n                        </Form.Control.Feedback> */}\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        {/* <Button variant=\"outline-dark\" onClick={send}>only file</Button> */}\r\n                    </Form>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </Row>\r\n        <hr style={{ borderStyle: \"solid\", borderWidth: \"5px\" }}></hr>\r\n        <Row className=\"my-5\">\r\n            <Col sx={12} md={6} className=\"my-2\">\r\n                <Button variant=\"warning\" size=\"lg\" onClick={() => history.push(\"/newRecipe_step2\")} block>\r\n                    Previous Step\r\n                </Button>\r\n            </Col>\r\n            <Col sx={12} md={6} className=\"my-2\">\r\n                <Button variant=\"warning\" size=\"lg\" onClick={finshRecipe} block>\r\n                    {loading && <Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                    />}\r\n                    {loading ? <span>Loading...</span> : <span>Upload your Recipe!</span>}\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n\r\n    </Container>\r\n}\r\n\r\nexport default Phase3;\r\n","export default __webpack_public_path__ + \"static/media/youdidit.c0f7113f.jpg\";","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport bkgd from '../../../imgs/youdidit.jpg'\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { Container, Row, Col, Button, Form, Card, InputGroup, ListGroup, Alert, FormControl } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Phase4 = () => {\r\n    useEffect(() => {\r\n        //\r\n        localStorage.removeItem(\"step1\")\r\n        localStorage.removeItem(\"step2\")\r\n    }, [])\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    const recipePage = () => {\r\n        history.push(`/recipe_details/${id}`)\r\n    }\r\n\r\n    const homePage = () => {\r\n        history.push(`/`)\r\n    }\r\n\r\n\r\n    return <Container className=\"py-4 \">\r\n        <Row className=\"justify-content-center text-center\">\r\n            <Col md={{ span: 11 }} >\r\n                <img alt=\"you did it\" className=\"Foodsimg youDidIt\" variant=\"top\" src={bkgd} />\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center text-center p-3 my-4\">\r\n            <Col >\r\n                <p className=\"display-4\">\r\n                    The recipe was successfully uploaded and is now available for public view on our site.\r\n                </p>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-around text-center py-2\">\r\n            <Col md={4}>\r\n                <Button size=\"lg\" className=\"sizeBt\" variant=\"warning\" onClick={recipePage} > View your Recipe Page </Button>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Button size=\"lg\" className=\"sizeBt\" variant=\"warning\" onClick={homePage} >Go to Home Page</Button>\r\n            </Col>\r\n        </Row>\r\n    </Container >\r\n}\r\n\r\nexport default Phase4;","import { Link, useHistory, useParams, Prompt } from \"react-router-dom\";\r\nimport { Button, Form, InputGroup, Alert, Container, Col, Row } from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\nimport { getCatsAndDiets, getUpdateDetails, isRecipeNameAvailable } from '../../../DAL/api'\r\n\r\n\r\nconst UpdateRecipe = ({ connected, hasPageAaccess }) => {\r\n    const { id } = useParams()\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        hasPageAaccess(connected, history)\r\n        //eslint-disable-next-line\r\n    }, [connected])\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        (async () => {\r\n            const data = await getCatsAndDiets();\r\n            // console.log(data, \"data\");\r\n\r\n            // async function getDatafromDb() {\r\n            const recipeData = await getUpdateDetails(id);\r\n            for (let i = 0; i < recipeData.length; i++) {\r\n                localStorage.setItem(`step${i + 1}`, JSON.stringify(recipeData[i]))\r\n            }\r\n\r\n            // getDatafromDb()\r\n\r\n            if (localStorage.getItem(\"step1\")) {\r\n                const inputsPage1Local = JSON.parse(localStorage.getItem(\"step1\"));\r\n                console.log(\"inputsPage1Local\", inputsPage1Local);\r\n                for (const key in inputsPage1Local) {\r\n                    if (key in details) {\r\n                        details[key].value = inputsPage1Local[key];\r\n                    }\r\n                    if (key === \"diets\") {\r\n                        data[0].forEach(el => {\r\n                            const id = +el.id || el.id\r\n                            if (inputsPage1Local[key].includes(id)) {\r\n                                el.selected = true;\r\n                            } else {\r\n                                el.selected = false;\r\n                            }\r\n                        })\r\n                    }\r\n                    if (key === \"categories\") {\r\n                        data[1].forEach(el => {\r\n                            const id = +el.id || el.id\r\n                            if (inputsPage1Local[key].includes(id)) {\r\n                                el.selected = true;\r\n                            } else {\r\n                                el.selected = false;\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                }\r\n                setDetails({\r\n                    ...details,\r\n                });\r\n                const checkboxsInfo = { diets: data[0], categories: data[1] }\r\n                setCheckboxs(prev => checkboxsInfo)\r\n            }\r\n        })()\r\n\r\n    }, [])\r\n\r\n    const updateStep1 = (data) => {\r\n        localStorage.setItem(\"step1\", JSON.stringify(data));\r\n    };\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [checkboxs, setCheckboxs] = useState({ diets: [], categories: [] });\r\n    const [details, setDetails] = useState({\r\n        categories: { isRequired: true, pattern: /[\\s\\S]{1,}/, msg: [], value: [], isInVaild: false },\r\n        diets: { isRequired: true, pattern: /[\\s\\S]{1,}/, msg: [], value: [], isInVaild: false },\r\n        recipeName: { isRequired: true, pattern: /\\w{3,}/, msg: [], value: \"\", isInVaild: false },\r\n        description: { isRequired: true, pattern: /[\\s\\S]{5,110}/, msg: [], value: \"\", isInVaild: false },\r\n        Servings: { isRequired: true, pattern: /\\d/, msg: [], value: \"\", isInVaild: false },\r\n        CookingTime: { isRequired: true, pattern: /\\d/, msg: [], value: \"\", isInVaild: false },\r\n        prepTimeMins: { isRequired: true, pattern: /\\d/, msg: [], value: \"\", isInVaild: false },\r\n        level: { isRequired: true, pattern: /[\\s\\S]{2,}/, msg: [], value: \"\", isInVaild: false },\r\n    })\r\n\r\n    const handleSubmit = async (event) => {\r\n        // event.preventDefault();\r\n        event.preventDefault();\r\n        console.log(\"enetr sumbit\");\r\n        const checkErrors = [];\r\n        for (const key in details) {\r\n            if (Object.hasOwnProperty.call(details, key)) {\r\n                // console.log(\"before validation-\", key, details[key].value);\r\n                checkErrors.push(validation({ name: key, value: details[key].value }))\r\n            }\r\n        }\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(false)\r\n                event.stopPropagation();\r\n                console.log(\"err\", error);\r\n                return;\r\n            }\r\n        }\r\n\r\n        console.log(\"input whitout errors!!!\");\r\n        setValidated(true);\r\n\r\n\r\n        const allRelevantData = {\r\n            userId: JSON.parse(localStorage.getItem(\"user\")).id,\r\n            recipeName: details.recipeName.value,\r\n            description: details.description.value,\r\n            Servings: details.Servings.value,\r\n            CookingTime: details.CookingTime.value,\r\n            prepTimeMins: details.prepTimeMins.value,\r\n            level: details.level.value,\r\n            categories: details.categories.value,\r\n            diets: details.diets.value,\r\n        }\r\n\r\n        updateStep1(allRelevantData)\r\n        history.push(`/updateRecipe_step2/${id}`)\r\n    }\r\n\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (name === \"categories\" && value.length < 1) {\r\n            isMsgShowing = true\r\n            errorMsg.push(`${name} is required.`)\r\n        } else if (name === \"diets\" && value.length < 1) {\r\n            isMsgShowing = true\r\n            errorMsg.push(`${name} is required.`)\r\n        } else if (value === \"\") {\r\n            isMsgShowing = true\r\n            errorMsg.push(`${name} is required.`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`${name} is not valid.`)\r\n            isMsgShowing = true\r\n        }\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n\r\n    const updateBox = (e, listName) => {\r\n        let data = {\r\n            checked: e.target.checked,\r\n            currId: +e.target.id || e.target.id,\r\n            currName: e.target.name,\r\n            allChecked: []\r\n        }\r\n        // console.log(\"data\", data);\r\n        let { [listName]: newBox } = checkboxs;\r\n        for (let box of newBox) {\r\n            if (box.id === data.currId && box.name === data.currName) {\r\n                box.selected = data.checked;\r\n            }\r\n            if (box.selected) {\r\n                data.allChecked.push(box.id)\r\n            }\r\n        }\r\n        let isMsgShowing;\r\n        let errmsg = \"\";\r\n        if (!!data.allChecked.length) {\r\n            errmsg = \"\";\r\n            isMsgShowing = false;\r\n        } else {\r\n            errmsg = \"Please select at least one option\"\r\n            isMsgShowing = true;\r\n        }\r\n        setCheckboxs(prev => ({ ...prev, [listName]: newBox }));\r\n        setDetails(prevDetails => ({ ...prevDetails, [listName]: { ...prevDetails[listName], value: data.allChecked, isInVaild: isMsgShowing, msg: errmsg } }))\r\n    }\r\n\r\n\r\n\r\n    const formIsHalfFiled = Object.values(details)\r\n        .filter(item => item.value && (item.value !== \"\" || item.value.length > 0))\r\n        .length > 0 && Object.values(details)\r\n            .filter(item => item.value && (item.value !== \"\" || item.value.length > 0))\r\n            .length < 8;\r\n\r\n    console.log(\"formIsHalfFiled\", formIsHalfFiled);\r\n\r\n\r\n\r\n\r\n    return <Container fluid>\r\n        <h1 className=\"display-2 text-center\"> Update your Recipe</h1>\r\n        <Row className=\"phase-top\">\r\n            <Col className=\"active\">1</Col>\r\n            <Col onClick={() => history.push(`/updateRecipe_step2/${id}`)} >\r\n                2\r\n            </Col>\r\n            <Col onClick={() => history.push(`/updateRecipe_step3/${id}`)} >\r\n                3\r\n            </Col>\r\n\r\n        </Row>\r\n        <Alert show={show} variant=\"secondary\" onClose={() => setShow(false)}>\r\n            User recipe name already exist. Please try with another name.\r\n        </Alert>\r\n\r\n        {/* <Prompt when={formIsHalfFiled} message=\"You have unsaved changes. Sure you want to leave?\" /> */}\r\n\r\n\r\n        <Row className=\"justify-content-center\">\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"w-75 text-center\">\r\n\r\n                <Form.Group >\r\n                    <Form.Label>Recipe Name:</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"recipeName\"\r\n                            onBlur={e => validation(e.target)}\r\n                            onChange={(e) => validation(e.target)}\r\n                            value={details.recipeName.value}\r\n                            placeholder=\"Enter recipe name...\"\r\n                            isInvalid={details.recipeName.isInVaild}\r\n                            required />\r\n                        <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                            {details.recipeName.msg}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md={12} lg={3} className=\"text-center\">\r\n                        <Form.Label >Servings:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                name=\"Servings\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.Servings.value}\r\n                                isInvalid={details.Servings.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.Servings.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md={12} lg={3} className=\"text-center\">\r\n                        <Form.Label>Difficulty:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"level\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.level.value}\r\n                                isInvalid={details.level.isInVaild}\r\n                                required>\r\n                                <option value={\"\"}>Select level...</option>\r\n                                <option value={\"easy\"}>Easy</option>\r\n                                <option value={\"medium\"}>Intermediate</option>\r\n                                <option value={\"hard\"}>Hard</option>\r\n                            </Form.Control>\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.level.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md={12} lg={3} className=\"text-center\">\r\n                        <Form.Label>Cooking Time in Minutes:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                name=\"CookingTime\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.CookingTime.value}\r\n                                isInvalid={details.CookingTime.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.CookingTime.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group as={Col} md={12} lg={3} className=\"text-center\">\r\n                        <Form.Label>Prep Time in Minutes:</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                name=\"prepTimeMins\"\r\n                                onBlur={e => validation(e.target)}\r\n                                onChange={(e) => validation(e.target)}\r\n                                value={details.prepTimeMins.value}\r\n                                isInvalid={details.prepTimeMins.isInVaild}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.prepTimeMins.msg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group >\r\n                    <Form.Label>Description:</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            type=\"textarea\"\r\n                            name=\"description\"\r\n                            onBlur={e => validation(e.target)}\r\n                            onChange={(e) => validation(e.target)}\r\n                            value={details.description.value}\r\n                            placeholder=\"Enter description...\"\r\n                            isInvalid={details.description.isInVaild}\r\n                            required\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                            {details.description.msg}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n\r\n\r\n                <hr></hr>\r\n                <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Categories:</Form.Label>\r\n                        <div as=\"inline-checkbox\" className=\"mb-3\">\r\n                            {checkboxs.categories.map(type => <Form.Check\r\n                                inline\r\n                                hasValidation\r\n                                label={type.name}\r\n                                name={type.name}\r\n                                id={type.id}\r\n                                type='checkbox'\r\n                                isInvalid={details.categories.isInVaild}\r\n                                checked={type.selected}\r\n                                onChange={e => updateBox(e, \"categories\")}\r\n                                onBlur={e => updateBox(e, \"categories\")} />\r\n                            )}\r\n                        </div>\r\n                        {details.categories.msg && <small className=\"categoriesDietsErrMsg\">{details.categories.msg} </small>}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Diets:</Form.Label>\r\n                        <div as=\"inline-checkbox\" className=\"mb-3\">\r\n                            {checkboxs.diets.map(type => <Form.Check\r\n                                inline\r\n                                label={type.name}\r\n                                name={type.name}\r\n                                id={type.id}\r\n                                type='checkbox'\r\n                                isInvalid={details.diets.isInVaild}\r\n                                checked={type.selected}\r\n                                onBlur={e => updateBox(e, \"diets\")}\r\n                                onChange={e => updateBox(e, \"diets\")} />\r\n                            )}\r\n                        </div>\r\n                        {details.diets.msg && <small className=\"categoriesDietsErrMsg\">{details.diets.msg} </small>}\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <hr></hr>\r\n                <Row className=\"text-center my-3 justify-content-center\">\r\n                    <Button variant=\"outline-dark\" type=\"submit\">Continue to the Next Step</Button>\r\n                </Row>\r\n            </Form>\r\n        </Row>\r\n    </Container >\r\n}\r\n\r\nexport default UpdateRecipe;","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { Link, useHistory, Prompt } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { Container, Row, Col, Button, Form, Card, InputGroup, ListGroup, Alert, FormControl } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { unitsAndIngs } from '../../../DAL/api'\r\n\r\n\r\n\r\nfunction Step2() {\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n    const [ingsUnits, setIngsUnits] = useState([]);\r\n    const [validated, setValidated] = useState(false);\r\n    const [combineData, setCombineData] = useState([]);\r\n    const [details, setDetails] = useState({\r\n        ingredient: { isRequired: true, msg: [], pattern: /[\\s\\S]{1,}/, value: \"\", id: null, isInVaild: false },\r\n        unit: { isRequired: true, msg: [], pattern: /[\\s\\S]{1,}/, value: \"\", id: null, isInVaild: false },\r\n        quantity: { isRequired: true, msg: [], pattern: /[\\s\\S]{1,}/, value: \"\", isInVaild: false },\r\n        unitlst: [],\r\n        ingredientlst: [],\r\n    })\r\n    const { id } = useParams()\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n\r\n        (async () => {\r\n            const dataFromDb = await unitsAndIngs()\r\n            setIngsUnits(pev => [dataFromDb[0], dataFromDb[1]])\r\n\r\n            if (localStorage.getItem(\"step2\")) {\r\n                const inputsPage2ocal = JSON.parse(localStorage.getItem(\"step2\"))\r\n                setCombineData(prev => inputsPage2ocal)\r\n            }\r\n\r\n        })()\r\n\r\n    }, [])\r\n\r\n    const checkIngredients = () => {\r\n        if (combineData.length < 2) {\r\n            setShow(true)\r\n            setTimeout(() => setShow(false), 3000)\r\n            return;\r\n        }\r\n        localStorage.setItem(\"step2\", JSON.stringify(combineData));\r\n        history.push(`/updateRecipe_step3/${id}`)\r\n    }\r\n\r\n    const removeName = (data) => {\r\n        setCombineData(prev => prev.filter(item => item !== data))\r\n    }\r\n\r\n    const formIsHalfFiled = Object.values(details)\r\n        .filter(item => item.value && item.value !== \"\")\r\n        .length > 0;\r\n\r\n    console.log(\"formIsHalfFiled\", formIsHalfFiled);\r\n\r\n    const findName = (lst, value) => lst.filter((item, i) => {\r\n        return item.name.toLowerCase().startsWith(value.toLowerCase())\r\n    });\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let status = false;\r\n        const checkErrors = [];\r\n        for (const key in details) {\r\n            if (!key.includes('lst')) {\r\n                // console.log(key, details[key].value)\r\n                checkErrors.push(validation({ name: key, value: details[key].value }));\r\n            }\r\n        }\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(status)\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                // console.log(error, details);\r\n                return;\r\n            }\r\n        }\r\n        setValidated(!status);\r\n        // event.preventDefault();\r\n        const data = {\r\n            ingredient: {\r\n                id: details.ingredient.id,\r\n                name: details.ingredient.value,\r\n            },\r\n            unit: {\r\n                id: details.unit.id,\r\n                name: details.unit.value,\r\n            },\r\n            quantity: details.quantity.value\r\n        }\r\n        const checkDuplicates = combineData.find(ele => ele.ingredient.id === data.ingredient.id)\r\n        if (checkDuplicates) {\r\n            alert(\"You cannot select the same ingredient twice.\")\r\n            return;\r\n        }\r\n        // console.log(combineData);\r\n        setCombineData(prev => [...prev, data]);\r\n        const temp = {\r\n            ...details,\r\n            ingredient: { ...details[\"ingredient\"], value: \"\", id: \"\", isInVaild: false },\r\n            unit: { ...details[\"unit\"], value: \"\", id: \"\", isInVaild: false },\r\n            quantity: { ...details[\"quantity\"], value: \"\", isInVaild: false }\r\n        }\r\n        setDetails(temp)\r\n    }\r\n\r\n\r\n    const updateValue = (type, { id, name }) => {\r\n        setDetails(prev => ({ ...prev, [type]: { ...prev[type], value: name, id }, [type + \"lst\"]: [] }))\r\n    }\r\n\r\n\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (value === \"\" || value === undefined) {\r\n            isMsgShowing = true\r\n            errorMsg.push(`${name} is required.`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`${name} is not valid.`)\r\n            isMsgShowing = true\r\n        }\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n\r\n\r\n\r\n        // console.log(details);\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n\r\n    const updateDropDown = async ({ name, value }) => {\r\n        try {\r\n            validation({ name, value });\r\n            if (name === \"quantity\") {\r\n                setDetails(prev => ({ ...prev, [name]: { ...prev[name], value: value.name, id: value.id } }))\r\n            } else {\r\n                const index = name === \"unit\" ? 1 : 0;\r\n                const filerOne = await findName(ingsUnits[index], value)\r\n                if (!filerOne.length) {\r\n                    let isMsgShowing = true\r\n                    let errorMsg = [`Select ${name} that exists in the website.`]\r\n                    setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value: value.name, isInVaild: isMsgShowing, msg: errorMsg }, [name + \"lst\"]: [] }))\r\n                    return;\r\n                }\r\n                const filterd = value ? filerOne.slice(0, 5) : [];\r\n                setDetails(prev => ({ ...prev, [name]: { ...prev[name], value: value.name, id: value.id }, [name + \"lst\"]: filterd }))\r\n\r\n            }\r\n        } catch (err) {\r\n            alert(err)\r\n        }\r\n    }\r\n\r\n\r\n    return <Container className=\"mb-5\">\r\n        <h1 className=\"display-2 text-center\"> Update your Recipe</h1>\r\n\r\n        {/* <Prompt when={formIsHalfFiled} message=\"You have unsaved changes. Sure you want to leave?\" /> */}\r\n\r\n        <Row className=\"phase-top\">\r\n            <Col onClick={() => history.push(`updateRecipe_step1/${id}`)}> 1  </Col>\r\n            <Col className=\"active\">2</Col>\r\n            <Col onClick={() => history.push(`updateRecipe_step3/${id}`)}> 3  </Col>\r\n        </Row>\r\n\r\n        <Alert show={show} variant=\"secondary\" onClose={() => setShow(false)}>\r\n            Please add at least 2 Ingredients.\r\n        </Alert>\r\n\r\n\r\n        <h1 className=\"display-4 pb-2\">Ingredients:</h1>\r\n        <p>Enter at least two ingredients.</p>\r\n        <Row className=\"mb-4 mediaStyle\">\r\n            <Col >\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Row >\r\n                        <Form.Group as={Col}\r\n                            className=\"px-1\"\r\n                        >\r\n                            <InputGroup\r\n                                hasValidation>\r\n                                <FormControl\r\n                                    placeholder=\"Enter quantity\"\r\n                                    type=\"number\"\r\n                                    name=\"quantity\"\r\n                                    value={details.quantity.value}\r\n                                    onChange={e => validation(e.target)}\r\n                                    onblur={e => validation(e.target)}\r\n                                    isInvalid={details.quantity.isInVaild}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                    {details.quantity.msg}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"px-1\" hasValidation>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autocomplete=\"off\"\r\n                                name=\"unit\"\r\n                                value={details.unit.value}\r\n                                onChange={e => updateDropDown(e.target)}\r\n                                onblur={e => updateDropDown(e.target)}\r\n                                placeholder=\"Enter measuring unit...\"\r\n                                // className=\"mr-sm-1\"\r\n                                isInvalid={details.unit.isInVaild}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.unit.msg}\r\n                            </Form.Control.Feedback>\r\n                            <ListGroup>\r\n                                {!!details.unitlst.length && details.unitlst.slice(0, 3).map((unit, i) => <ListGroup.Item\r\n                                    key={i}\r\n                                    onClick={() => updateValue(\"unit\", unit)}\r\n                                >\r\n                                    {unit.name}</ListGroup.Item>)}\r\n                            </ListGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} hasValidation className=\"px-1\">\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autocomplete=\"off\"\r\n                                name=\"ingredient\"\r\n                                value={details.ingredient.value}\r\n                                onChange={e => updateDropDown(e.target)}\r\n                                onblur={e => updateDropDown(e.target)}\r\n                                placeholder=\"Enter ingredient\"\r\n                                // className=\"mr-sm-1\"\r\n                                isInvalid={details.ingredient.isInVaild}\r\n                            // required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                {details.ingredient.msg}\r\n                            </Form.Control.Feedback>\r\n                            <ListGroup id=\"diplayZ\">\r\n                                {!!details.ingredientlst.length && details.ingredientlst.map((ing, i) => <ListGroup.Item\r\n                                    key={i}\r\n                                    onClick={() => updateValue(\"ingredient\", ing)}\r\n                                >\r\n                                    {ing.name}</ListGroup.Item>)}\r\n                            </ListGroup>\r\n                        </Form.Group>\r\n\r\n\r\n\r\n\r\n                        <Col>\r\n                            <Button type=\"submit\" className=\"mb-2\" variant=\"warning\"> Add </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n            <Col md=\"5 mb-4\">\r\n                {!combineData.length && <div className=\"text-center justify-content-center\" id=\"msgNoIngredient\">\r\n                    <div id=\"noIngredient\">\r\n                    </div>\r\n                    <h4>\r\n                        No Ingredients were Selected...\r\n                    </h4>\r\n                </div>}\r\n                <div>\r\n                    <ol className=\"list-group\">\r\n                        {!!combineData.length && combineData.map((data, i) => <li\r\n                            key={i}\r\n                            className=\"list-group-item\">\r\n                            <FontAwesomeIcon\r\n                                onClick={() => removeName(data)}\r\n                                icon={faTrashAlt}\r\n                                className=\"mr-3\"\r\n                            />\r\n                            | Ingredient {i + 1} : {data.quantity} {data.unit.name} {data.ingredient.name}</li>)}\r\n                    </ol>\r\n                </div>\r\n\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"text-center my-3 justify-content-between\">\r\n            <div >\r\n                <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => history.push(`/updateRecipe_step1/${id}`)}  >\r\n                    Previous Step\r\n                </Button>\r\n            </div>\r\n            <div >\r\n                <Button\r\n                    variant=\"warning\"\r\n                    onClick={checkIngredients}  >\r\n                    Next Step\r\n                </Button>\r\n            </div>\r\n        </Row>\r\n    </Container >\r\n}\r\n\r\nexport default Step2;\r\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport axios from \"axios\";\r\nimport { updateRecipe } from '../../../DAL/api'\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams, Prompt } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button, Form, Card, InputGroup, ListGroup, Alert, FormControl, Spinner } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nfunction Step3() {\r\n    const { id } = useParams()\r\n    const history = useHistory()\r\n    const [file, setFile] = useState(null);\r\n    const [loading, setLoading] = useState(false)\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [validated, setValidated] = useState(false);\r\n    const [combineData, setCombineData] = useState([]);\r\n    const [details, setDetails] = useState({\r\n        instruction: { isRequired: true, msg: [], pattern: /[\\s\\S]{5,}/, value: \"\", isInVaild: false },\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        if (localStorage.getItem(\"step3\")) {\r\n            const inputsPage3ocal = JSON.parse(localStorage.getItem(\"step3\"))\r\n            setCombineData(prev => inputsPage3ocal)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const finshRecipe = async () => {\r\n        console.log(\"try\");\r\n        let isOK = false;\r\n        let msg = \"\";\r\n        if (combineData.length < 2) {\r\n            isOK = true;\r\n            msg = \"Please enter at least 2 instructions\";\r\n        }\r\n        setShow(isOK);\r\n        setErrMsg(msg)\r\n        window.scrollTo(0, 0);\r\n\r\n        if (!isOK) {\r\n            setLoading(true)\r\n            console.log(\"sending http request\");\r\n            const data = {\r\n                recipe: JSON.parse(localStorage.getItem(\"step1\")),\r\n                ingredients: JSON.parse(localStorage.getItem(\"step2\")),\r\n                instructions: combineData\r\n            }\r\n\r\n            let newImage;\r\n            if (file !== null) {\r\n                newImage = new FormData()\r\n                newImage.append(\"image\", file)\r\n            }\r\n\r\n            console.log(\"image\", newImage, \"file\", file);\r\n\r\n            const respone = await updateRecipe(id, data, newImage)\r\n            setLoading(false)\r\n            if (respone) {\r\n                console.log(respone, \"respone\")\r\n                history.push(`/Step4/${id}`)\r\n            } else {\r\n                console.log(\"problem with image!\");\r\n                setShow(true);\r\n                setErrMsg(\"oops...There was a problem with the recipe, please try again\")\r\n                window.scrollTo(0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const fileValidation = (target) => {\r\n        const File = target.files[0]\r\n        setFile(File)\r\n    }\r\n\r\n    const findInstruction = (data) => {\r\n        setCombineData(prev => prev.filter(item => item !== data))\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        let status = false;\r\n        const checkErrors = [];\r\n        for (const key in details) {\r\n            checkErrors.push(validation({ name: key, value: details[key].value }));\r\n        }\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(status)\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n        setValidated(!status);\r\n        event.preventDefault();\r\n        const data = details.instruction.value\r\n\r\n        setCombineData(prev => [...prev, data]);\r\n        setDetails(prevDetails => ({ ...prevDetails, instruction: { ...prevDetails.instruction, value: \" \" } }))\r\n    }\r\n\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (value === \"\" || value === undefined) {\r\n            isMsgShowing = true\r\n            errorMsg.push(`${name} is required.`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`${name} is not valid`)\r\n            isMsgShowing = true\r\n        }\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n\r\n\r\n\r\n        // console.log(details);\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n    const formIsHalfFiled = Object.values(details)\r\n        .filter(item => item.value && item.value !== \"\")\r\n        .length > 0;\r\n\r\n    console.log(\"formIsHalfFiled\", formIsHalfFiled);\r\n\r\n\r\n\r\n    return <Container>\r\n        <h1 className=\"display-2 text-center\"> Update your Recipe</h1>\r\n        <Row className=\"phase-top\">\r\n            <Col onClick={() => history.push(`/updateRecipe_step1/${id}`)} >\r\n                1\r\n            </Col>\r\n            <Col onClick={() => history.push(`/updateRecipe_step2/${id}`)} >\r\n                2\r\n            </Col>\r\n            <Col className=\"active\"> 3 </Col>\r\n        </Row>\r\n        <Alert show={show} variant=\"secondary\" onClose={() => setShow(false)}>\r\n            {errMsg}\r\n        </Alert>\r\n\r\n        {/* <Prompt when={formIsHalfFiled} message=\"You have unsaved changes. Sure you want to leave?\" /> */}\r\n\r\n\r\n        <h1 className=\"display-4 pb-2\">Instructions:</h1>\r\n        <Row >\r\n            {/* <Row className=\"align-items-center\"> */}\r\n            <Col >\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Row>\r\n                        <Form.Group as={Col}\r\n                            className=\"px-1\"\r\n                        >\r\n                            <InputGroup\r\n                                hasValidation>\r\n                                <FormControl\r\n                                    placeholder=\"Enter Instructions...\"\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    type=\"textarea\"\r\n                                    name=\"instruction\"\r\n                                    value={details.instruction.value}\r\n                                    onChange={e => validation(e.target)}\r\n                                    onblur={e => validation(e.target)}\r\n                                    isInvalid={details.instruction.isInVaild}\r\n                                    required\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\" className=\"feedback\">\r\n                                    enter at least 5 characters.\r\n                                    {/* {details.instruction.msg} */}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Col>\r\n                            <Button type=\"submit\" className=\"my-2\" variant=\"warning\"> Add Instructions </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n            <Col md=\"5\" className=\"pb-4\">\r\n                {!combineData.length && <div className=\"text-center justify-content-center\" id=\"msgNoIngredient\">\r\n                    <div id=\"noIngredient2\">\r\n                    </div>\r\n                    <h4>\r\n                        No Instructions Were Written yet...\r\n                    </h4>\r\n                </div>}\r\n                <div>\r\n                    <ol className=\"list-group\">\r\n                        {!!combineData.length && combineData.map((data, i) => <li\r\n                            key={i}\r\n                            className=\"list-group-item\">\r\n                            <FontAwesomeIcon\r\n                                onClick={() => findInstruction(data)}\r\n                                icon={faTrashAlt}\r\n                                className=\"mr-3\"\r\n                            />\r\n                            | Instruction {i + 1} : {data} </li>)}\r\n                    </ol>\r\n                </div>\r\n\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"styleRowUp justify-content-md-center text-center p-3\">\r\n            <Card\r\n                text='dark'\r\n                style={{ width: '28rem' }}\r\n                className=\"mb-2 text-center p-auto justify-content-md-center\"\r\n            >\r\n                <Card.Header>\r\n                    <h4>\r\n                        If you want to swap your recipe image, upload it here.\r\n                    </h4>\r\n                </Card.Header>\r\n                <Card.Body >\r\n                    <Form className=\"p-auto m-auto\">\r\n                        <Form.Group>\r\n                            <InputGroup hasValidation>\r\n                                <Form.File\r\n                                    className=\"p-auto m-auto\"\r\n                                    name=\"image\"\r\n                                    onBlur={e => fileValidation(e.target)}\r\n                                    onChange={(e) => fileValidation(e.target)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </Row>\r\n        <hr style={{ borderStyle: \"solid\", borderWidth: \"5px\" }}></hr>\r\n        <Row className=\"my-5\">\r\n            <Col sx={12} md={6} className=\"my-2\">\r\n                <Button variant=\"warning\" size=\"lg\" onClick={() => history.push(`/updateRecipe_step2/${id}`)} block>\r\n                    Previous Step\r\n                </Button>\r\n            </Col>\r\n            <Col sx={12} md={6} className=\"my-2\">\r\n                <Button variant=\"warning\" size=\"lg\" onClick={finshRecipe} block>\r\n                    {loading && <Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                    />}\r\n                    {loading ? <span>Loading...</span> : <span>Update your Recipe!</span>}\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n\r\n    </Container>\r\n}\r\n\r\nexport default Step3;\r\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { Container, Row, Col, Button, Form, Card, InputGroup, ListGroup, Alert, FormControl } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport bkgd from '../../../imgs/youdidit.jpg'\r\n\r\n\r\n\r\nconst Step4 = () => {\r\n    useEffect(() => {\r\n        //\r\n        localStorage.removeItem(\"step1\")\r\n        localStorage.removeItem(\"step2\")\r\n        localStorage.removeItem(\"step3\")\r\n    }, [])\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    const recipePage = () => {\r\n        history.push(`/recipe_details/${id}`)\r\n    }\r\n\r\n    const homePage = () => {\r\n        history.push(`/`)\r\n    }\r\n\r\n\r\n    return <Container className=\"py-4 \">\r\n        <Row className=\"justify-content-center text-center\">\r\n            <Col md={{ span: 11 }} >\r\n                <img alt=\"you did it\" className=\"Foodsimg youDidIt\" variant=\"top\" src={bkgd} />\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center text-center p-3 my-4\">\r\n            <Col >\r\n                <p className=\"display-4\">\r\n                    Congrats, your recipe was successfully Updated!\r\n                </p>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-around text-center py-4\">\r\n            <Col md={4}>\r\n                <Button size=\"lg\" className=\"sizeBt\" variant=\"warning\" onClick={recipePage} > View your Recipe Page </Button>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Button size=\"lg\" className=\"sizeBt\" variant=\"warning\" onClick={homePage} >Go to Home Page</Button>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n}\r\n\r\nexport default Step4;","export default __webpack_public_path__ + \"static/media/logo3.b253739f.png\";","import logo3 from '../imgs/logo3.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ListGroup, Nav, Navbar } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\n\r\n\r\nconst NavbarHome = ({ connected, user, logOut, showLogin, displayLogin }) => {\r\n\r\n\r\n    return <Navbar collapseOnSelect expand=\"lg\" sticky=\"top\" className=\"py-0 styleMainNav\" >\r\n        <Navbar.Brand\r\n            onClick={() => window.scrollTo(0, 0)}>\r\n            <Link to=\"/\">\r\n                <img src={logo3} style={{ height: '50px', width: '100px' }} alt=\"logo\"></img>\r\n            </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link>\r\n                    <Link to=\"/\"> Home Page </Link>\r\n                </Nav.Link>\r\n\r\n\r\n                <Nav.Link>\r\n                    <Link to=\"/AllRecipes\"> All Recipes </Link>\r\n                </Nav.Link>\r\n\r\n                {/* <Nav.Link>\r\n                    <HashLink smooth to=\"/#recipes\">\r\n                        All Recipes\r\n                    </HashLink>\r\n                </Nav.Link> */}\r\n\r\n                <Nav.Link style={{ display: connected ? 'none' : 'block' }}>\r\n                    <Link to=\"/Sign_Up\">Sign Up</Link>\r\n                </Nav.Link>\r\n                <Nav.Link style={{ display: connected ? 'none' : 'block' }}>\r\n                    <Link style={{ ariaExpanded: { showLogin } }} onClick={displayLogin}>\r\n                        Login\r\n                    </Link>\r\n                </Nav.Link>\r\n\r\n                <Nav.Link style={{ display: connected ? 'block' : 'none' }}>\r\n                    <Link to=\"/newRecipe_step1\">Add A New Recipe</Link>\r\n                </Nav.Link>\r\n                <Nav.Link style={{ display: connected ? 'block' : 'none' }}>\r\n                    <Link onClick={logOut}>Logout</Link>\r\n                </Nav.Link>\r\n            </Nav>\r\n\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n            <FontAwesomeIcon\r\n                icon={faUserCircle}\r\n                style={{ display: connected ? 'block' : 'none' }}\r\n                id=\"styleIcon\" />\r\n            <ListGroup className=\"dropDownUser\">\r\n                <ListGroup.Item>\r\n                    <Link className=\"px-2 mx-4\" to={\"/User_Profile/\" + user.id}>User Profile</Link>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Link className=\"px-2 mx-4\" to={\"/MyFavorites/\" + user.id}>My Favorites</Link>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Link className=\"px-2 mx-4\" to={\"/My_Recipes/\" + user.id}>My Recipes</Link>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Link className=\"px-2 mx-4\" to=\"/newRecipe_step1\">Add A New Recipe</Link>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    {/* <Link className=\"px-2 mx-3\" onClick={switchUser}>Logout</Link> */}\r\n                    <Link className=\"px-2 mx-3\" onClick={logOut}>Logout</Link>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n            <div\r\n                style={{ display: connected ? 'block' : 'none' }}\r\n                className=\"mb-1\">\r\n                <span > Hello, <u> {user.name}</u></span>\r\n            </div>\r\n        </Navbar.Collapse>\r\n    </Navbar >\r\n}\r\n\r\nexport default NavbarHome;","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './CSS/style.css'\r\nimport './components/User/CSS/userPages.css'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Container } from 'react-bootstrap';\r\nimport Recipes from './components/Recipes';\r\nimport Home from './components/Home';\r\nimport { hasPageAaccess } from './DAL/utilFun';\r\nimport Login from './components/Forms/usersForms/Login';\r\nimport SignUp from './components/Forms/usersForms/SignUp';\r\nimport MyFavorites from './components/User/ProfilePages/MyFavorites';\r\nimport MyRecipes from './components/User/ProfilePages/MyRecipes';\r\nimport UserProfile from './components/User/ProfilePages/UserProfile';\r\nimport { useState, useEffect } from 'react';\r\nimport NewRecipe from './components/Forms/AddRecipe/newRecipe';\r\nimport { checkLoginAccess, selectedItem, getDetaildsFromDb, logoutDeleteCookie } from './DAL/api'\r\nimport RecipeInfo from '../src/components/RecipeInfo'\r\nimport UserSecondNavber from \"./components/User/UserSecondNavber\";\r\nimport ErrorMsg from './components/User/ProfilePages/ErrorMsg';\r\nimport Phase2 from './components/Forms/AddRecipe/Phase2';\r\nimport Phase3 from './components/Forms/AddRecipe/Phase3';\r\nimport Phase4 from './components/Forms/AddRecipe/Phase4';\r\nimport UpdateRecipe from './components/Forms/updateRecipe/UpdateRecipe';\r\nimport Step2 from './components/Forms/updateRecipe/Step2';\r\nimport Step3 from './components/Forms/updateRecipe/Step3';\r\nimport Step4 from './components/Forms/updateRecipe/Step4';\r\nimport NavbarHome from './components/NavbarHome';\r\n\r\nfunction App() {\r\n  const [showLogin, setShowLogin] = useState(false)\r\n  const [connected, setConnected] = useState(false)\r\n  const [checkUser, setCheckUser] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  })\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    id: NaN,\r\n    email: \"\"\r\n  })\r\n\r\n\r\n  const userUpdateHandler = (info) => {\r\n    localStorage.setItem(\"user\", JSON.stringify(info))\r\n    setUser(info)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const checkConnected = JSON.parse(localStorage.getItem(\"user\"))\r\n    if (checkConnected) {\r\n      setConnected(true);\r\n      setUser(prev => checkConnected)\r\n    }\r\n  }, [])\r\n\r\n\r\n  useState(() => {\r\n  }, [user])\r\n\r\n\r\n  useEffect(() => {\r\n    fetchingUser();\r\n    return logOut\r\n  }, [checkUser])\r\n\r\n\r\n  const fetchingUser = async () => {\r\n    try {\r\n      const isData = await checkLoginAccess({ email: checkUser.email, password: checkUser.password })\r\n      // const importUser = await checkingMatch(isData);\r\n      // await updatingLoginStatus(importUser)\r\n      const res = await checkingMatch(isData);\r\n      // console.log(\"בדיקה:\", checkUser.email, checkUser.password, isData, res);\r\n      return res;\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const checkingMatch = isData => {\r\n    if (!isData) {\r\n      // console.log('no match');\r\n      return false;\r\n    }\r\n    setConnected(true);\r\n    setUser(prev => isData);\r\n    localStorage.setItem(\"user\", JSON.stringify(isData))\r\n    setShowLogin(false)\r\n    return true;\r\n  }\r\n\r\n\r\n  const logOut = () => {\r\n    window.scrollTo(0, 0);\r\n    localStorage.clear();\r\n    logoutDeleteCookie()\r\n    setConnected(false)\r\n  }\r\n\r\n\r\n\r\n  const displayLogin = () => {\r\n    const temp = showLogin === false ? true : false;\r\n    setShowLogin(temp)\r\n  }\r\n\r\n  return <Container fluid className=\"pt-0 pb-3\" >\r\n    <span id=\"top\"></span>\r\n    <Router>\r\n      <NavbarHome connected={connected} user={user} logOut={logOut} showLogin={showLogin} displayLogin={displayLogin} />\r\n\r\n      <Login showLogin={showLogin} onClose={displayLogin} setUser={setUser} setConnected={setConnected} />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" >\r\n          <Home connected={connected} userName={user.name} />\r\n        </Route>\r\n        <Route exact path=\"/AllRecipes\">\r\n          <Recipes isConnected={connected} UserId={user.id} />\r\n        </Route>\r\n        <Route exact path=\"/Sign_Up\">\r\n          <SignUp connected={connected} hasPageAaccess={hasPageAaccess} />\r\n        </Route>\r\n        <Route exact path=\"/newRecipe_step1\">\r\n          <NewRecipe connected={connected} hasPageAaccess={hasPageAaccess} />\r\n        </Route>\r\n        <Route exact path=\"/newRecipe_step2\">\r\n          <Phase2 />\r\n        </Route>\r\n        <Route exact path=\"/newRecipe_step3\">\r\n          <Phase3 />\r\n        </Route>\r\n        <Route exact path=\"/updateRecipe_step1/:id\">\r\n          <UpdateRecipe connected={connected} hasPageAaccess={hasPageAaccess} />\r\n        </Route>\r\n        <Route exact path=\"/updateRecipe_step2/:id\">\r\n          <Step2 />\r\n        </Route>\r\n        <Route exact path=\"/updateRecipe_step3/:id\">\r\n          <Step3 />\r\n        </Route>\r\n        <Route exact path=\"/recipe_details/:id\">\r\n          <RecipeInfo connected={connected} hasPageAaccess={hasPageAaccess} onselect={selectedItem} />\r\n        </Route>\r\n        <Route exact path=\"/MyFavorites/:id\">\r\n          <UserSecondNavber connected={connected} />\r\n          <MyFavorites connected={connected} hasPageAaccess={hasPageAaccess} />\r\n        </Route>\r\n        <Route exact path=\"/User_Profile/:id\">\r\n          <UserSecondNavber connected={connected} />\r\n          <UserProfile connected={connected} hasPageAaccess={hasPageAaccess} getDetaildsFromDb={getDetaildsFromDb} userUpdateHandler={userUpdateHandler} />\r\n        </Route>\r\n        <Route exact path=\"/My_Recipes/:id\">\r\n          <UserSecondNavber connected={connected} />\r\n          <MyRecipes connected={connected} hasPageAaccess={hasPageAaccess} />\r\n        </Route>\r\n        <Route exact path=\"/Phase4/:id\">\r\n          <Phase4 />\r\n        </Route>\r\n        <Route exact path=\"/Step4/:id\">\r\n          <Step4 />\r\n        </Route>\r\n        <Route component={ErrorMsg} />\r\n      </Switch>\r\n\r\n\r\n\r\n    </Router >\r\n\r\n    {/* <div style={{ height: \"35px\" }} > */}\r\n    {/* <div className=\"footer text-white text-center mb-0\">\r\n        <p> © Israela Zimru <a href=\"#top\" className=\"text-white pl-2\"> | top </a> </p>\r\n      </div> */}\r\n    {/* </div> */}\r\n  </Container>\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}